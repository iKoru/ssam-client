{"version":3,"sources":["webpack:///./src/components/TopicCreator.vue?361c","webpack:///./src/components/TopicCreator.vue?3075","webpack:///src/components/TopicCreator.vue","webpack:///./src/components/TopicCreator.vue?a010","webpack:///./src/components/TopicCreator.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_TopicCreator_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_TopicCreator_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","this","_h","$createElement","_c","_self","attrs","tile","card","color","_v","_s","board","icon","on","click","$event","$emit","ref","row","xs12","wrap","staticClass","xs6","readonly","label","hint","model","value","callback","$$v","boardId","expression","rules","boardIdRules","error-messages","boardIdErrors","maxlength","placeholder","validate-on-blur","blur","checkBoardId","boardNameRules","required","boardName","rows","height","boardDescription","hide-details","allowAnonymous","bottom","slot","useCategory","items","allGroupAuthItems","dense","allGroupAuth","align-center","fill-height","$vuetify","breakpoint","xsOnly","tag","domProps","innerHTML","allGroupAuthDescription","name","chips","multiple","item-text","item-value","disabled","groupItems","myGroup","persistent-hint","menu-props","closeOnContentClick","scopedSlots","_u","key","fn","props","item","close","small","selected","input","removeChip","allowedGroups","text","data","boardMemberItems","ownerNickName","_e","reservedDate","$moment","format","reservedContents","flat","reset","deleteBoard","loading","save","staticRenderFns","reserved","boardIdRegex","groupName","M","G","N","R","Z","TopicCreatorvue_type_script_lang_js_","v","includes","length","test","computed","profile","$store","getters","filter","x","groups","some","y","map","join","_this","_ret","string","_loop","concat","find","groupId","command","_typeof","methods","skipGetInformationFormServer","_this2","$axios","get","params","headers","silent","then","response","myNickName","topicNickName","nickName","catch","error","console","log","dispatch","message","categories","boardAuth","list","parent","selectedItems","splice","indexOf","event","_this3","call","_this4","$refs","form","validate","confirm","put","undefined","authType","post","boardType","_this5","status","created","_this6","forEach","groupType","sort","a","b","previous","i","divider","header","watch","handler","deep","components_TopicCreatorvue_type_script_lang_js_","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-452d4511.e8f08032.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicCreator.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicCreator.vue?vue&type=style&index=0&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{attrs:{\"tile\":\"\"}},[_c('v-toolbar',{attrs:{\"card\":\"\",\"color\":\"white\"}},[_c('v-toolbar-title',[_vm._v(_vm._s(_vm.board?'토픽 관리':'새로운 토픽 만들기'))]),_c('v-spacer'),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){_vm.$emit('closeDialog', null)}}},[_c('v-icon',[_vm._v(\"close\")])],1)],1)],1),_c('v-card-text',[_c('v-form',{ref:\"form\"},[_c('v-layout',{attrs:{\"row\":\"\",\"xs12\":\"\",\"wrap\":\"\"}},[_c('v-flex',{staticClass:\"mb-1\",attrs:{\"xs6\":\"\"}},[(_vm.board)?_c('v-text-field',{staticClass:\"dense\",attrs:{\"readonly\":\"\",\"label\":\"토픽ID\",\"hint\":\"pedagy.com/<b>seoul</b>과 같이 URL주소에 들어가는 문구입니다.\"},model:{value:(_vm.boardId),callback:function ($$v) {_vm.boardId=$$v},expression:\"boardId\"}}):_c('v-text-field',{staticClass:\"dense\",attrs:{\"rules\":_vm.boardIdRules,\"error-messages\":_vm.boardIdErrors,\"maxlength\":\"15\",\"label\":\"토픽ID\",\"hint\":\"pedagy.com/<b>seoul</b>과 같이 URL주소에 들어갈 문구입니다.\",\"placeholder\":\"비워두면 임의로 생성됩니다.\",\"validate-on-blur\":\"\"},on:{\"blur\":_vm.checkBoardId},model:{value:(_vm.boardId),callback:function ($$v) {_vm.boardId=$$v},expression:\"boardId\"}})],1),_c('v-flex',{staticClass:\"mb-1\",attrs:{\"xs6\":\"\"}},[_c('v-text-field',{staticClass:\"dense\",attrs:{\"rules\":_vm.boardNameRules,\"maxlength\":\"200\",\"label\":\"토픽 이름\",\"required\":\"\",\"hint\":\"토픽 목록에 표시되는 이름입니다.\",\"validate-on-blur\":\"\"},model:{value:(_vm.boardName),callback:function ($$v) {_vm.boardName=$$v},expression:\"boardName\"}})],1),_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('v-textarea',{ref:\"boardDescription\",attrs:{\"rows\":3,\"maxlength\":\"1000\",\"height\":\"80px\",\"label\":\"토픽 소개\",\"hint\":\"토픽 이름 아래에 작게 표시되는 설명입니다.\",\"validate-on-blur\":\"\"},model:{value:(_vm.boardDescription),callback:function ($$v) {_vm.boardDescription=$$v},expression:\"boardDescription\"}})],1),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-checkbox',{ref:\"allowAnonymous\",staticClass:\"dense mt-2\",attrs:{\"label\":\"익명글 허용\",\"hide-details\":\"\"},model:{value:(_vm.allowAnonymous),callback:function ($$v) {_vm.allowAnonymous=$$v},expression:\"allowAnonymous\"}})],1),_c('v-flex',{attrs:{\"xs6\":\"\"}},[_c('v-tooltip',{attrs:{\"bottom\":\"\"}},[_c('v-checkbox',{ref:\"useCategory\",staticClass:\"dense mt-2\",attrs:{\"slot\":\"activator\",\"label\":\"카테고리 분류 사용\",\"hide-details\":\"\"},slot:\"activator\",model:{value:(_vm.useCategory),callback:function ($$v) {_vm.useCategory=$$v},expression:\"useCategory\"}}),_c('span',[_vm._v(\"글을 작성할 때 작성자가 기본/정보/질문 중 하나의 카테고리를 지정할 수 있습니다.\")])],1)],1),_c('v-flex',{staticClass:\"mt-3\",attrs:{\"xs6\":\"\"}},[_c('v-select',{attrs:{\"items\":_vm.allGroupAuthItems,\"label\":\"토픽 공개 여부\",\"dense\":\"\"},model:{value:(_vm.allGroupAuth),callback:function ($$v) {_vm.allGroupAuth=$$v},expression:\"allGroupAuth\"}})],1),_c('v-flex',{staticClass:\"mt-3\",attrs:{\"xs6\":\"\"}},[_c('v-layout',{attrs:{\"align-center\":\"\",\"fill-height\":\"\"}},[_c(_vm.$vuetify.breakpoint.xsOnly?'small':'div',{tag:\"component\",domProps:{\"innerHTML\":_vm._s(_vm.allGroupAuthDescription)}})],1)],1),_c('v-flex',{attrs:{\"xs12\":\"\"}},[_c(_vm.$vuetify.breakpoint.xsOnly?'v-select':'v-autocomplete',{tag:\"component\",attrs:{\"name\":\"allowedGroups\",\"chips\":\"\",\"multiple\":\"\",\"item-text\":\"text\",\"dense\":\"\",\"item-value\":\"value\",\"disabled\":_vm.allGroupAuth === 'READWRITE',\"items\":_vm.groupItems,\"label\":\"구독 권한\",\"hint\":'내가 구독할 수 있도록 선택해야 합니다.' + (_vm.myGroup !== ''? ' 나의 구독가능 정보 : ' + _vm.myGroup : ''),\"persistent-hint\":\"\",\"menu-props\":{closeOnContentClick:_vm.$vuetify.breakpoint.xsOnly}},scopedSlots:_vm._u([{key:\"selection\",fn:function(props){return [_c('v-chip',{key:props.item.value,attrs:{\"close\":\"\",\"small\":\"\",\"selected\":props.selected},on:{\"input\":function($event){_vm.removeChip(props, props.item, _vm.allowedGroups)}}},[_vm._v(_vm._s(props.item.text))])]}},{key:\"item\",fn:function(data){return [_c('v-list-tile-content',[_c('v-list-tile-title',{domProps:{\"innerHTML\":_vm._s(data.item.text)}})],1)]}}]),model:{value:(_vm.allowedGroups),callback:function ($$v) {_vm.allowedGroups=$$v},expression:\"allowedGroups\"}})],1),(_vm.board)?_c('v-flex',{staticClass:\"mt-2\",attrs:{\"xs12\":\"\"}},[_c('v-select',{attrs:{\"name\":\"ownerNickName\",\"dense\":\"\",\"items\":_vm.boardMemberItems,\"label\":\"토픽지기 양도\",\"hint\":\"선택한 회원에게 토픽지기가 양도됩니다.\",\"persistent-hint\":\"\"},model:{value:(_vm.ownerNickName),callback:function ($$v) {_vm.ownerNickName=$$v},expression:\"ownerNickName\"}})],1):_vm._e(),(_vm.board && _vm.board.reservedDate)?_c('v-flex',{staticClass:\"mt-3\",attrs:{\"xs12\":\"\"}},[_c('v-textarea',{ref:\"reservedContents\",attrs:{\"rows\":3,\"readonly\":\"\",\"height\":\"80px\",\"label\":'변경 예약('+_vm.$moment(_vm.board.reservedDate, 'YYYYMMDD').format('Y.M.D')+' 반영 예정) 내용',\"hint\":\"변경이 예약된 토픽의 내용입니다.\"},model:{value:(_vm.reservedContents),callback:function ($$v) {_vm.reservedContents=$$v},expression:\"reservedContents\"}})],1):_vm._e()],1),_c('v-divider',{staticClass:\"my-2\"}),_c('v-layout',{attrs:{\"row\":\"\"}},[_c('v-btn',{attrs:{\"flat\":\"\"},on:{\"click\":function($event){_vm.reset(true)}}},[_vm._v(\"초기화\")]),(_vm.board)?_c('v-btn',{attrs:{\"color\":\"error\"},on:{\"click\":_vm.deleteBoard}},[_vm._v(\"삭제\")]):_vm._e(),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"loading\":_vm.loading},on:{\"click\":_vm.save}},[_vm._v(\"등록\")])],1)],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-card tile>\n    <v-toolbar card color=\"white\">\n      <v-toolbar-title>{{board?'토픽 관리':'새로운 토픽 만들기'}}</v-toolbar-title>\n      <v-spacer></v-spacer>\n      <v-toolbar-items>\n        <v-btn icon @click=\"$emit('closeDialog', null)\">\n          <v-icon>close</v-icon>\n        </v-btn>\n      </v-toolbar-items>\n    </v-toolbar>\n    <v-card-text>\n      <v-form ref=\"form\">\n        <v-layout row xs12 wrap>\n          <v-flex xs6 class=\"mb-1\">\n            <v-text-field v-if=\"board\" v-model=\"boardId\" class=\"dense\" readonly label=\"토픽ID\" hint=\"pedagy.com/<b>seoul</b>과 같이 URL주소에 들어가는 문구입니다.\"></v-text-field>\n            <v-text-field v-else v-model=\"boardId\" :rules=\"boardIdRules\" class=\"dense\" :error-messages=\"boardIdErrors\" maxlength=\"15\" label=\"토픽ID\" hint=\"pedagy.com/<b>seoul</b>과 같이 URL주소에 들어갈 문구입니다.\" placeholder=\"비워두면 임의로 생성됩니다.\" validate-on-blur @blur=\"checkBoardId\"></v-text-field>\n          </v-flex>\n          <v-flex xs6 class=\"mb-1\">\n            <v-text-field v-model=\"boardName\" :rules=\"boardNameRules\" class=\"dense\" maxlength=\"200\" label=\"토픽 이름\" required hint=\"토픽 목록에 표시되는 이름입니다.\" validate-on-blur></v-text-field>\n          </v-flex>\n          <v-flex xs12>\n            <v-textarea ref=\"boardDescription\" v-model=\"boardDescription\" :rows=\"3\" maxlength=\"1000\" height=\"80px\" label=\"토픽 소개\" hint=\"토픽 이름 아래에 작게 표시되는 설명입니다.\" validate-on-blur></v-textarea>\n          </v-flex>\n          <v-flex xs6>\n            <v-checkbox ref=\"allowAnonymous\" v-model=\"allowAnonymous\" class=\"dense mt-2\" label=\"익명글 허용\" hide-details></v-checkbox>\n          </v-flex>\n          <v-flex xs6>\n            <v-tooltip bottom>\n              <v-checkbox ref=\"useCategory\" slot=\"activator\" v-model=\"useCategory\" class=\"dense mt-2\" label=\"카테고리 분류 사용\" hide-details></v-checkbox>\n              <span>글을 작성할 때 작성자가 기본/정보/질문 중 하나의 카테고리를 지정할 수 있습니다.</span>\n            </v-tooltip>\n          </v-flex>\n          <v-flex xs6 class=\"mt-3\">\n            <v-select v-model=\"allGroupAuth\" :items=\"allGroupAuthItems\" label=\"토픽 공개 여부\" dense></v-select>\n          </v-flex>\n          <v-flex xs6 class=\"mt-3\">\n            <v-layout align-center fill-height>\n              <component :is=\"$vuetify.breakpoint.xsOnly?'small':'div'\" v-html=\"allGroupAuthDescription\"></component>\n            </v-layout>\n          </v-flex>\n          <v-flex xs12>\n            <component :is=\"$vuetify.breakpoint.xsOnly?'v-select':'v-autocomplete'\" name=\"allowedGroups\" chips multiple item-text=\"text\" dense item-value=\"value\" v-model=\"allowedGroups\" :disabled=\"allGroupAuth === 'READWRITE'\" :items=\"groupItems\" label=\"구독 권한\" :hint=\"'내가 구독할 수 있도록 선택해야 합니다.' + (myGroup !== ''? ' 나의 구독가능 정보 : ' + myGroup : '')\" persistent-hint :menu-props=\"{closeOnContentClick:$vuetify.breakpoint.xsOnly}\">\n              <template slot=\"selection\" slot-scope=\"props\">\n                <v-chip close small :key=\"props.item.value\" :selected=\"props.selected\" @input=\"removeChip(props, props.item, allowedGroups)\">{{props.item.text}}</v-chip>\n              </template>\n              <template slot=\"item\" slot-scope=\"data\">\n                <v-list-tile-content>\n                  <v-list-tile-title v-html=\"data.item.text\"></v-list-tile-title>\n                </v-list-tile-content>\n              </template>\n            </component>\n          </v-flex>\n          <v-flex xs12 v-if=\"board\" class=\"mt-2\">\n            <v-select name=\"ownerNickName\" dense v-model=\"ownerNickName\" :items=\"boardMemberItems\" label=\"토픽지기 양도\" hint=\"선택한 회원에게 토픽지기가 양도됩니다.\" persistent-hint></v-select>\n          </v-flex>\n          <v-flex xs12 v-if=\"board && board.reservedDate\" class=\"mt-3\">\n            <v-textarea ref=\"reservedContents\" v-model=\"reservedContents\" :rows=\"3\" readonly height=\"80px\" :label=\"'변경 예약('+$moment(board.reservedDate, 'YYYYMMDD').format('Y.M.D')+' 반영 예정) 내용'\" hint=\"변경이 예약된 토픽의 내용입니다.\"></v-textarea>\n          </v-flex>\n        </v-layout>\n        <v-divider class=\"my-2\"/>\n        <v-layout row>\n          <v-btn flat @click=\"reset(true)\">초기화</v-btn>\n          <v-btn color=\"error\" @click=\"deleteBoard\" v-if=\"board\">삭제</v-btn>\n          <v-spacer/>\n          <v-btn color=\"primary\" @click=\"save\" :loading=\"loading\">등록</v-btn>\n        </v-layout>\n      </v-form>\n    </v-card-text>\n  </v-card>\n</template>\n<script>\nconst reserved = [\"document\", \"documents\", \"profile\", \"profiles\", \"auth\", \"user\", \"users\", \"comment\", \"comments\", \"vote\", \"votes\", \"report\", \"reports\", \"index\", \"scraps\", \"scrap\", \"board\", \"boards\", \"manage\", \"manages\", \"chat\", \"chats\", \"message\", \"messages\", \"group\", \"groups\", \"event\", \"events\", \"signup\", \"signin\", \"signout\", \"resetPassword\", \"notification\", \"notifications\", \"survey\", \"list\", \"admin\", \"ADMIN\", \"ADMINISTRATOR\", \"administrator\", \"attach\", \"profiles\", \"animal\", \"loungeBest\", \"topicBest\", \"lounge\", \"topic\", \"type\", \"best\", \"sanction\", \"userId\", \"nickName\", \"myPage\", \"myBoard\", \"myCommunity\", \"pedagy\", \"myPedagy\", \"Pedagy\"];\nconst boardIdRegex = [/^(?:[a-zA-Z]+)(?:[a-zA-Z0-9\\-_]{0,15})$/, /^((?!(--|__)).)*$/];\nconst groupName = {M: \"전공\", G: \"학년\", N: \"일반\", R: \"지역\", Z: \"인증\"};\nexport default {\n  name: \"topicCreator\",\n  data() {\n    return {\n      loading: false,\n      boardId: null,\n      boardName: null,\n      boardDescription: null,\n      allGroupAuth: \"READONLY\",\n      allowAnonymous: true,\n      useCategory: false,\n      allowedGroups: [],\n      allGroupAuthItems: [{value: \"READWRITE\", text: \"전체구독허용\"}, {value: \"READONLY\", text: \"읽기공개\"}, {value: \"NONE\", text: \"비공개\"}],\n      ownerNickName: null,\n      groupItems: [],\n      boardIdRules: [v => !reserved.includes(v) || \"사용할 수 없는 ID입니다.\", v => !v || (v.length > 3 && v.length < 16) || \"4~15자로 입력해주세요.\", v => boardIdRegex[0].test(v) || \"토픽ID의 길이가 너무 길거나, 알파벳이 아닌 문자가 있습니다.\", v => boardIdRegex[1].test(v) || \"토픽ID에 연속된 [_, -]가 있습니다.\"],\n      boardNameRules: [v => !!v || \"토픽 이름을 입력해주세요.\"],\n      boardMemberItems: [],\n      boardIdErrors: []\n    };\n  },\n  props: [\"board\"],\n  computed: {\n    myGroup() {\n      const profile = this.$store.getters.profile;\n      return this.groupItems\n        .filter(x => profile.groups.some(y => y === x.value))\n        .map(x => x.text)\n        .join(\", \");\n    },\n    allGroupAuthDescription() {\n      switch (this.allGroupAuth) {\n        case \"READONLY\":\n          return \"구독자만 글을 쓸 수 있지만,<br>구독하지 않아도 글을 볼 수 있습니다.<br>그 대신 핫토픽에 글이 노출됩니다.\";\n        case \"NONE\":\n          return \"구독자만 글을 읽고 쓸 수 있습니다.<br>핫토픽에는 글이 노출되지 않습니다.\";\n        case \"READWRITE\":\n          return \"모든 회원이 토픽을 구독할 수 있습니다.<br>구독하지 않아도 글을 볼 수 있습니다.<br>핫토픽에 글이 노출됩니다.\";\n      }\n    },\n    reservedContents() {\n      if (this.board && this.board.reservedContents) {\n        let reservedContents = this.board.reservedContents;\n        let string = \"\";\n        for (let key in reservedContents) {\n          switch (key) {\n            case \"boardName\":\n              string += `토픽 이름 : ${reservedContents[key]}\\n`;\n              break;\n            case \"boardDescription\":\n              string += `토픽 설명 : ${reservedContents[key]}\\n`;\n              break;\n            case \"allowAnonymous\":\n              string += `익명글 허용 여부 : ${reservedContents[key] ? \"허용\" : \"비허용\"}\\n`;\n              break;\n            case \"useCategory\":\n              string += `카테고리 : ${reservedContents[key] ? \"사용\" : \"미사용\"}\\n`;\n              break;\n            case \"allGroupAuth\":\n              string += `토픽 공개/비공개 : ${this.allGroupAuthItems.some(x => x.value === reservedContents[key]) ? this.allGroupAuthItems.find(x => x.value === reservedContents[key]).text : \"(알 수 없음)\"}\\n`;\n              break;\n            case \"ownerNickName\":\n              string += `토픽지기 : ${reservedContents[key]}\\n`;\n              break;\n            case \"auth\":\n              string += `구독 권한 : ${reservedContents[key]\n                .filter(x => this.groupItems.some(y => y.value === x.groupId))\n                .map(x => this.groupItems.find(y => y.value === x.groupId).text + (x.command === \"INSERT\" ? \" 추가\" : x.command === \"DELETE\" ? \" 삭제\" : \"\"))\n                .join(\", \")}`;\n              break;\n            case \"status\":\n              string += reservedContents[key] === \"DELETED\" ? \"토픽 삭제 예정\" : \"\";\n              break;\n          }\n        }\n        return string;\n      } else {\n        return null;\n      }\n    }\n  },\n  methods: {\n    reset(skipGetInformationFormServer) {\n      if (this.board) {\n        if (!skipGetInformationFormServer) {\n          this.loading = true;\n          this.$axios\n            .get(\"/board/member\", {params: {boardId: this.board.boardId}, headers: {silent: true}})\n            .then(response => {\n              const myNickName = this.$store.getters.profile.topicNickName;\n              this.boardMemberItems = response.data.filter(x => x.nickName !== myNickName).map(x => x.nickName);\n              this.loading = false;\n            })\n            .catch(error => {\n              console.log(error.response);\n              this.loading = false;\n              this.$store.dispatch(\"showSnackbar\", {text: error.response ? error.response.data.message : \"토픽 구성원을 불러오지 못했습니다.\", color: \"error\"});\n            });\n        }\n        this.boardId = this.board.boardId;\n        this.boardName = this.board.boardName;\n        this.boardDescription = this.board.boardDescription;\n        this.allGroupAuth = this.board.allGroupAuth;\n        this.allowAnonymous = this.board.allowAnonymous;\n        this.useCategory = this.board.categories ? this.board.categories.filter(x => x).length > 0 : false;\n        this.allowedGroups = this.board.boardAuth.map(x => x.groupId);\n        this.ownerNickName = this.board.ownerNickName;\n      } else {\n        this.boardId = null;\n        this.boardName = null;\n        this.boardDescription = null;\n        this.allGroupAuth = \"READONLY\";\n        this.allowAnonymous = true;\n        this.useCategory = false;\n        this.allowedGroups = [];\n        this.ownerNickName = null;\n      }\n    },\n    removeChip(props, item, list) {\n      props.parent.selectedItems.splice(props.parent.selectedItems.indexOf(item.value), 1);\n      list.splice(list.indexOf(item.value), 1);\n    },\n    checkBoardId(event) {\n      if (this.boardId && this.boardIdErrors.length === 0) {\n        this.$axios\n          .get(\"/boardId\", {params: {boardId: this.boardId}, headers: {silent: true}})\n          .then(response => {\n            this.boardIdErrors = [];\n            if (typeof event === \"function\") {\n              event.call(this);\n            }\n          })\n          .catch(error => {\n            this.boardIdErrors = [error && error.response && error.response.data.message];\n            if (typeof event === \"function\") {\n              event.call(this);\n            }\n          });\n      } else if (typeof event === \"function\") {\n        event.call(this);\n      }\n    },\n    save() {\n      if (this.board) {\n        if (this.$refs.form.validate() && this.boardIdErrors.length === 0) {\n          if (confirm(\"변경 내용은 1개월 뒤에 반영됩니다. 계속하시겠습니까?\")) {\n            this.loading = true;\n            this.$axios\n              .put(\"/board\", {\n                boardId: this.boardId,\n                boardName: this.boardName,\n                boardDescription: this.boardDescription || undefined,\n                allGroupAuth: this.allGroupAuth,\n                allowAnonymous: this.allowAnonymous,\n                allowedGroups: this.allowedGroups.map(x => ({groupId: x, authType: \"READWRITE\"})),\n                useCategory: this.useCategory,\n                ownerNickName: this.ownerNickName || undefined\n              })\n              .then(response => {\n                this.loading = false;\n                this.$emit(\"resetBoard\");\n                this.$emit(\"closeDialog\");\n                this.$store.dispatch(\"showSnackbar\", {text: \"토픽 정보를 변경 예약하였습니다.\", color: \"success\"});\n              })\n              .catch(error => {\n                console.log(error.response);\n                this.loading = false;\n                this.$store.dispatch(\"showSnackbar\", {text: error.response ? error.response.data.message : \"토픽을 만들지 못했습니다.\", color: \"error\"});\n              });\n          }\n        } else {\n          this.$store.dispatch(\"showSnackbar\", {text: \"토픽 정보를 정확히 입력해주세요.\", color: \"error\"});\n        }\n      } else {\n        this.checkBoardId(() => {\n          if (this.$refs.form.validate() && this.boardIdErrors.length === 0) {\n            this.loading = true;\n            this.$axios\n              .post(\"/board\", {\n                boardId: this.boardId,\n                boardName: this.boardName,\n                boardType: \"T\",\n                boardDescription: this.boardDescription || undefined,\n                allGroupAuth: this.allGroupAuth,\n                allowAnonymous: this.allowAnonymous,\n                allowedGroups: this.allowedGroups.map(x => ({groupId: x, authType: \"READWRITE\"})),\n                useCategory: this.useCategory\n              })\n              .then(response => {\n                this.loading = false;\n                this.$store.dispatch(\"addBoard\", {\n                  boardId: this.boardId,\n                  boardName: this.boardName,\n                  boardType: \"T\",\n                  boardDescription: this.boardDescription || undefined,\n                  allGroupAuth: this.allGroupAuth,\n                  allowAnonymous: this.allowAnonymous\n                });\n                this.$store.dispatch(\"addUserBoard\", {\n                  boardId: this.boardId,\n                  boardName: this.boardName,\n                  boardType: \"T\",\n                  boardDescription: this.boardDescription || undefined,\n                  allGroupAuth: this.allGroupAuth,\n                  allowAnonymous: this.allowAnonymous\n                });\n                this.$emit(\"resetBoard\");\n                this.$emit(\"closeDialog\");\n                this.reset();\n                this.$store.dispatch(\"showSnackbar\", {text: \"새로운 토픽을 만들었습니다.\", color: \"success\"});\n              })\n              .catch(error => {\n                console.log(error.response);\n                this.loading = false;\n                this.$store.dispatch(\"showSnackbar\", {text: error.response ? error.response.data.message : \"토픽을 만들지 못했습니다.\", color: \"error\"});\n              });\n          } else {\n            this.$store.dispatch(\"showSnackbar\", {text: \"토픽 정보를 정확히 입력해주세요.\", color: \"error\"});\n          }\n        });\n      }\n    },\n    deleteBoard() {\n      if (confirm(\"토픽 삭제는 1개월 유예기간 후에 이루어지고,\\n삭제 후에는 모든 글에 접근이 불가능합니다. 계속하시겠습니까?\")) {\n        this.$axios\n          .put(\"/board\", {boardId: this.boardId, status: \"DELETED\"})\n          .then(response => {\n            this.$emit(\"resetBoard\");\n            this.$emit(\"closeDialog\");\n            this.$store.dispatch(\"showSnackbar\", {text: \"토픽 삭제를 예약하였습니다.\", color: \"success\"});\n          })\n          .catch(error => {\n            console.log(error.response);\n            this.$store.dispatch(\"showSnackbar\", {text: error.response ? error.response.data.message : \"토픽을 만들지 못했습니다.\", color: \"error\"});\n          });\n      }\n    }\n  },\n  created() {\n    if (this.$store.getters.groups) {\n      this.groupItems = this.$store.getters.groups;\n    } else {\n      this.$axios\n        .get(\"/group\", {headers: {silent: true}})\n        .then(response => {\n          response.data.forEach(x => {\n            if (x.groupType === \"N\" || x.groupType === \"D\" || x.groupType === \"E\") {\n              x.groupType = \"Z\";\n            }\n          });\n          this.groupItems = response.data.sort((a, b) => (a.groupType < b.groupType ? -1 : a.groupType === b.groupType ? 0 : 1));\n          let previous = null;\n          let i = 0;\n          while (i < this.groupItems.length) {\n            if (previous !== this.groupItems[i].groupType) {\n              if (previous) {\n                previous = this.groupItems[i].groupType;\n                this.groupItems.splice(i, 0, {divider: true});\n                i++;\n              } else {\n                previous = this.groupItems[i].groupType;\n              }\n              this.groupItems.splice(i, 0, {header: groupName[previous]});\n              i++;\n            }\n            i++;\n          }\n          this.groupItems = this.groupItems.map(x => (x.groupName ? {text: x.groupName, value: x.groupId} : x));\n          this.$store.dispatch(\"setGroups\", this.groupItems);\n        })\n        .catch(error => {\n          this.$store.dispatch(\"showSnackbar\", {text: `그룹 목록을 가져오지 못했습니다.${error && error.response && error.response.data ? \"[\" + error.response.data.message + \"]\" : \"\"}`});\n        });\n    }\n    this.reset();\n  },\n  watch: {\n    boardId() {\n      if (this.boardIdErrors.length > 0) {\n        this.boardIdErrors = [];\n      }\n    },\n    board: {\n      handler() {\n        this.reset();\n      },\n      deep: true\n    }\n  }\n};\n</script>\n<style>\nform .flex {\n  padding-left: 0.5rem;\n  padding-right: 0.5rem;\n}\n.v-list .v-subheader {\n  padding-left: 0.5rem;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicCreator.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./TopicCreator.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TopicCreator.vue?vue&type=template&id=33b5a2e6&\"\nimport script from \"./TopicCreator.vue?vue&type=script&lang=js&\"\nexport * from \"./TopicCreator.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TopicCreator.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}