{"version":3,"sources":["webpack:///./src/views/Board.vue?a4a7","webpack:///./src/components/mixins/BoardMixins.js","webpack:///./src/views/Board.vue?f2fb","webpack:///src/views/Board.vue","webpack:///./src/views/Board.vue?ab02","webpack:///./src/views/Board.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_Board_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_Board_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","BoardMixins","data","boardTypeItems","T","L","D","X","E","N","webUrl","process","methods","uuid","partialUUID","Math","random","toString","substring","dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type","timeParser","timestamp","moment","fromNow","render","_vm","this","_h","$createElement","_c","_self","attrs","fluid","pt-2","staticClass","flat","primary-title","column","row","align-center","on","click","$event","$route","params","documentId","path","endsWith","$router","push","board","boardId","openDialog","_v","_s","boardName","bottom","close-delay","slot","color","domProps","innerHTML","reservedContents","_e","childBoardItems","id","dense","items","item-text","item-value","single-line","hide-details","input","childBoardChanged","model","value","callback","$$v","childBoardId","expression","boardType","$store","getters","userBoards","some","x","small","depressed","directives","name","rawName","documentBoardId","icon","$vuetify","breakpoint","xsOnly","moveToWriteDocument","boardDescription","class","my-3","update:documentBoardId","update:document-board-id","hasChildren","parentBoardId","write","max-width","lazy","dialog","selected","closeDialog","staticRenderFns","groupName","M","G","R","Z","Boardvue_type_script_lang_js_","undefined","writeButton","userAuthItems","A","groupItems","allGroupAuthItems","READWRITE","READONLY","NONE","props","mixins","components","DocumentList","e","then","bind","BoardInformation","computed","[object Object]","siblings","boards","filter","splice","find","childBoardLabel","children","string","$moment","reservedDate","format","key","y","groupId","map","text","command","join","profile","userBoard","available","statusAuth","includes","auth","writeRestrictDate","isBefore","allowedGroups","region","major","grade","groups","dispatch","allGroupAuth","$axios","post","response","Object","assign","catch","error","console","log","message","get","setBoard","document","title","$emit","MainLayout","headers","silent","forEach","groupType","sort","a","b","previous","divider","header","to","from","next","$nextTick","getBoard","router","app","vm","status","views_Boardvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"kHAAA,IAAAA,EAAAC,EAAA,QAAAC,EAAAD,EAAAE,EAAAH,GAAwgBE,EAAG,qCCA3gB,IAAAE,EAAAH,EAAA,QAAAI,EAAAJ,EAAAE,EAAAC,GACA,MAAME,EAAc,CAClBC,OACE,MAAO,CACLC,eAAgB,CACdC,EAAG,KACHC,EAAG,MACHC,EAAG,OACHC,EAAG,MACHC,EAAG,OACHC,EAAG,QAELC,OAAQC,uBAGZC,QAAS,CACPC,OACE,IAAIC,EAAc,KAChB,OAA8B,OAArB,EAAIC,KAAKC,UAAsB,GAAGC,SAAS,IAAIC,UAAU,IAEpE,OAAOJ,IAAgBA,IAAgB,IAAMA,IAAgB,IAAMA,IAAgB,IAAMA,IAAgB,IAAMA,IAAgBA,IAAgBA,KAEjJK,cAAeC,GAEb,IAAIC,EAEFA,EADED,EAAQE,MAAM,KAAK,GAAGC,QAAQ,WAAa,EAChCC,KAAKJ,EAAQE,MAAM,KAAK,IAExBG,SAASL,EAAQE,MAAM,KAAK,IAM3C,IAHA,IAAII,EAAaN,EAAQE,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE5DK,EAAK,IAAIC,WAAWP,EAAWQ,QAC1BC,EAAI,EAAGA,EAAIT,EAAWQ,OAAQC,IACrCH,EAAGG,GAAKT,EAAWU,WAAWD,GAEhC,OAAO,IAAIE,KAAK,CAACL,GAAK,CAAEM,KAAMP,KAEhCQ,WAAYC,GACV,OAAOC,IAAOD,EAAW,kBAAkBE,aAKlCpC,qDC7Cf,IAAAqC,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAF,EAAA,MAAAI,EAAA,eAAqCE,MAAA,CAAOC,MAAA,GAAAC,OAAA,KAAsB,CAAAJ,EAAA,UAAeK,YAAA,OAAAH,MAAA,CAA0BI,KAAA,KAAW,CAAAN,EAAA,gBAAqBK,YAAA,OAAAH,MAAA,CAA0BK,gBAAA,KAAoB,CAAAP,EAAA,YAAiBE,MAAA,CAAOM,OAAA,KAAa,CAAAR,EAAA,UAAAA,EAAA,YAA8BE,MAAA,CAAOO,IAAA,GAAAC,eAAA,KAA4B,CAAAV,EAAA,UAAAA,EAAA,YAA8BE,MAAA,CAAOO,IAAA,GAAAC,eAAA,KAA4B,CAAAV,EAAA,QAAaK,YAAA,uBAAAM,GAAA,CAAuCC,MAAA,SAAAC,GAAyBjB,EAAAkB,OAAAC,OAAAC,YAAApB,EAAAkB,OAAAG,KAAAC,SAAA,SAAAtB,EAAAuB,QAAAC,KAAA,IAAAxB,EAAAyB,MAAAC,SAAA1B,EAAA2B,gBAA6H,CAAA3B,EAAA4B,GAAA5B,EAAA6B,GAAA7B,EAAAyB,MAAAK,cAAA9B,EAAA,iBAAAI,EAAA,aAA+EK,YAAA,iBAAAH,MAAA,CAAoCyB,OAAA,GAAAC,cAAA,QAAiC,CAAA5B,EAAA,UAAeK,YAAA,6BAAAH,MAAA,CAAgD2B,KAAA,YAAAC,MAAA,WAAqCD,KAAA,aAAkB,CAAAjC,EAAA4B,GAAA,gBAAAxB,EAAA,QAAoC+B,SAAA,CAAUC,UAAApC,EAAA6B,GAAA7B,EAAAqC,sBAA0C,GAAArC,EAAAsC,KAAAtC,EAAAuC,gBAAAjD,OAAA,EAAAc,EAAA,QAA2DK,YAAA,QAAmB,CAAAL,EAAA,YAAiBK,YAAA,8CAAAH,MAAA,CAAiEkC,GAAA,qBAAA9B,KAAA,GAAA+B,MAAA,GAAAC,MAAA1C,EAAAuC,gBAAAI,YAAA,YAAAC,aAAA,UAAAC,cAAA,GAAAC,eAAA,IAA6J/B,GAAA,CAAKgC,MAAA/C,EAAAgD,mBAA8BC,MAAA,CAAQC,MAAAlD,EAAA,aAAAmD,SAAA,SAAAC,GAAkDpD,EAAAqD,aAAAD,GAAqBE,WAAA,mBAA4B,SAAAtD,EAAAyB,MAAA8B,WAAA,cAAAvD,EAAAyB,MAAAC,SAAA1B,EAAAwD,OAAAC,QAAAC,WAAAC,KAAA,SAAAC,GAA4H,OAAAA,EAAAlC,UAAA1B,EAAAyB,MAAAC,UAAiK1B,EAAAsC,KAAvHlC,EAAA,SAAeK,YAAA,aAAAH,MAAA,CAAgCuD,MAAA,GAAAC,UAAA,GAAA5B,MAAA,UAA2CnB,GAAA,CAAKC,MAAAhB,EAAA2B,aAAwB,CAAA3B,EAAA4B,GAAA,gBAAAxB,EAAA,YAAAA,EAAA,SAA6D2D,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAf,OAAAlD,EAAAkB,OAAAG,KAAAC,SAAA,WAAAtB,EAAAkB,OAAAG,KAAAC,SAAA,yBAAAtB,EAAAkB,OAAAC,OAAAO,SAAA,cAAA1B,EAAAkB,OAAAC,OAAAO,SAAA1B,EAAAkE,iBAAAlE,EAAAkB,OAAAC,OAAAC,YAAAkC,WAAA,4MAA0d7C,YAAA,OAAAH,MAAA,CAA4BwD,UAAA,GAAA5B,MAAA,UAAAiC,KAAA,GAAAN,MAAA7D,EAAAoE,SAAAC,WAAAC,QAAkFvD,GAAA,CAAKC,MAAAhB,EAAAuE,sBAAiC,CAAAnE,EAAA,UAAeE,MAAA,CAAOuD,MAAA,KAAY,CAAA7D,EAAA4B,GAAA,sBAAAxB,EAAA,UAA4C2D,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAf,MAAAlD,EAAAyB,MAAA,iBAAA6B,WAAA,4BAAsG,CAAAlD,EAAA,QAAaK,YAAA,WAAsB,CAAAT,EAAA4B,GAAA,iBAAA5B,EAAA6B,GAAA7B,EAAAyB,MAAA+C,kBAAA,kBAAApE,EAAA,UAA4FK,YAAA,wBAAAH,MAAA,CAA2CuD,MAAA,IAAW9C,GAAA,CAAKC,MAAAhB,EAAA2B,aAAwB,CAAA3B,EAAA4B,GAAA,4BAAAxB,EAAA,UAAkDqE,MAAA,CAAOC,OAAA1E,EAAAkB,OAAAG,KAAAC,SAAA,UAAAtB,EAAAkB,OAAAG,KAAAC,SAAA,SAA6EhB,MAAA,CAAQI,KAAA,KAAW,CAAAN,EAAA,eAAoBE,MAAA,CAAOmB,MAAAzB,EAAAyB,MAAAyC,gBAAAlE,EAAAkE,iBAAwDnD,GAAA,CAAK4D,yBAAA,SAAA1D,GAA0CjB,EAAAkE,gBAAAjD,GAA2B2D,2BAAA,SAAA3D,GAA6CjB,EAAAkE,gBAAAjD,OAA6B,GAAAb,EAAA,UAAmB2D,WAAA,EAAaC,KAAA,OAAAC,QAAA,SAAAf,OAAAlD,EAAAkB,OAAAG,KAAAC,SAAA,WAAAtB,EAAAkB,OAAAG,KAAAC,SAAA,QAAAgC,WAAA,oEAA0LhD,MAAA,CAASI,KAAA,KAAW,CAAAN,EAAA,iBAAsBE,MAAA,CAAOmB,MAAAzB,EAAAyB,MAAAoD,aAAA7E,EAAAyB,MAAAqD,eAAA9E,EAAAuC,gBAAAjD,OAAA,EAAA4E,gBAAAlE,EAAAkE,iBAAiInD,GAAA,CAAKgE,MAAA/E,EAAAuE,oBAAAI,yBAAA,SAAA1D,GAA0EjB,EAAAkE,gBAAAjD,GAA2B2D,2BAAA,SAAA3D,GAA6CjB,EAAAkE,gBAAAjD,OAA6B,GAAAb,EAAA,YAAqBE,MAAA,CAAO0E,YAAA,MAAAC,KAAA,IAA4BhC,MAAA,CAAQC,MAAAlD,EAAA,OAAAmD,SAAA,SAAAC,GAA4CpD,EAAAkF,OAAA9B,GAAeE,WAAA,WAAsB,CAAAlD,EAAA,qBAA0BE,MAAA,CAAOmB,MAAAzB,EAAAmF,UAAqBpE,GAAA,CAAKqE,YAAApF,EAAAoF,gBAA+B,OAAApF,EAAAsC,MACn8H+C,EAAA,uCCkDA,MAAAC,EAAA,CAAAC,EAAA,KAAAC,EAAA,KAAAtH,EAAA,KAAAuH,EAAA,KAAAC,EAAA,MACA,IAAAC,EAAA,CACA3B,KAAA,QACArG,KAAA,MACA8D,WAAAmE,EACAC,aAAA,EACAxC,aAAA,KACA6B,QAAA,EACAC,SAAA,KACAW,cAAA,CACA5H,EAAA,OACA6H,EAAA,KACA9H,EAAA,OACAF,EAAA,QAEAiI,WAAA,GACAC,kBAAA,CAAAC,UAAA,SAAAC,SAAA,OAAAC,KAAA,OACAlC,gBAAA,OAEAmC,MAAA,YACAC,OAAA,CAAA5I,EAAA,MACA6I,WAAA,CACAC,aAAA,IAAAnJ,EAAAoJ,EAAA,kBAAAC,KAAArJ,EAAAsJ,KAAA,cACAC,iBAAA,IAAAvJ,EAAAoJ,EAAA,kBAAAC,KAAArJ,EAAAsJ,KAAA,eAEAE,SAAA,CACAC,kBACA,GAAA7G,KAAAwB,MAAAqD,cAAA,CACA,IAAAiC,EAAA9G,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAA7E,KAAAwB,MAAAqD,eAAAlB,EAAAlC,UAAAzB,KAAAyB,SAGA,OAFAqF,EAAAG,OAAA,IAAAjH,KAAAuD,OAAAC,QAAAuD,OAAAG,KAAAvD,KAAAlC,UAAAzB,KAAAwB,MAAAqD,gBACAiC,EAAAG,OAAA,KAAAxF,QAAA,KAAAI,UAAA7B,KAAAmH,kBACAL,EACA,CACA,IAAAM,EAAApH,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAA7E,KAAAyB,SAEA,OADA2F,EAAAH,OAAA,KAAAxF,QAAA,KAAAI,UAAA7B,KAAAmH,kBACAC,IAGAP,kBACA,OAAA7G,KAAAwB,MAAAqD,cAAA,aAAA7E,KAAArC,eAAAqC,KAAAwB,MAAA8B,YAEAuD,mBACA,GAAA7G,KAAAwB,OAAAxB,KAAAwB,MAAAY,iBAAA,CACA,IAAAA,EAAApC,KAAAwB,MAAAY,iBACAiF,EAAArH,KAAAsH,QAAAtH,KAAAwB,MAAA+F,aAAA,YAAAC,OAAA,kCACA,QAAAC,KAAArF,EACA,OAAAqF,GACA,gBACAJ,MAAArH,KAAArC,eAAAqC,KAAAwB,MAAA8B,mBAAAlB,EAAAqF,SACA,MACA,uBACAJ,MAAArH,KAAArC,eAAAqC,KAAAwB,MAAA8B,mBAAAlB,EAAAqF,SACA,MACA,qBACAJ,YAAAjF,EAAAqF,GAAA,iBACA,MACA,kBACAJ,aAAAjF,EAAAqF,GAAA,iBACA,MACA,mBACAJ,MAAArH,KAAArC,eAAAqC,KAAAwB,MAAA8B,uBAAAtD,KAAAgG,kBAAA5D,EAAAqF,UACA,MACA,oBACAJ,MAAArH,KAAArC,eAAAqC,KAAAwB,MAAA8B,kBAAAlB,EAAAqF,SACA,MACA,WACAJ,mBAAAjF,EAAAqF,GACAT,OAAArD,GAAA3D,KAAA+F,WAAArC,KAAAgE,KAAAzE,QAAAU,EAAAgE,UACAC,IAAAjE,GAAA3D,KAAA+F,WAAAmB,KAAAQ,KAAAzE,QAAAU,EAAAgE,SAAAE,MAAA,WAAAlE,EAAAmE,QAAA,iBAAAnE,EAAAmE,QAAA,WACAC,KAAA,YACA,MACA,aACAV,GAAA,YAAAjF,EAAAqF,SAAAzH,KAAArC,eAAAqC,KAAAwB,MAAA8B,2BAAA,GACA,MAGA,OAAA+D,EAEA,cAIAjJ,QAAA,CACAyI,sBACA,IAAArF,EAAAxB,KAAAwB,MACAc,EAAAtC,KAAAsC,gBAeA,GAdA,eAAAd,EAAAC,SAAA,cAAAD,EAAAC,UAAAzB,KAAAiE,kBACAzC,EAAAxB,KAAAuD,OAAAC,QAAAuD,OAAAG,KAAAvD,KAAAlC,UAAAzB,KAAAiE,iBACAzC,IACAA,EAAAxB,KAAAwB,OAEAA,EAAAqD,eACAvC,EAAAtC,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAA7E,KAAAwB,MAAAqD,eAAAlB,EAAAlC,UAAAzB,KAAAyB,SACAa,EAAA2E,OAAA,IAAAjH,KAAAuD,OAAAC,QAAAuD,OAAAG,KAAAvD,KAAAlC,UAAAzB,KAAAwB,MAAAqD,gBACAvC,EAAA2E,OAAA,KAAAxF,QAAA,KAAAI,UAAA7B,KAAAmH,oBAEA7E,EAAAtC,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAA7E,KAAAyB,SACAa,EAAA2E,OAAA,KAAAxF,QAAA,KAAAI,UAAA7B,KAAAmH,qBAGA3F,EAAAqD,eAAAvC,EAAAjD,OAAA,GACA,MAAA2I,EAAAhI,KAAAuD,OAAAC,QAAAwE,QACAC,EAAAjI,KAAAuD,OAAAC,QAAAC,WAAAyD,KAAAvD,KAAAlC,UAAAD,EAAAC,SACA,IAAAyG,EAAAlI,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAArD,EAAAC,SAAAkC,EAAAwE,WAAArD,MAAAsD,SAAAJ,EAAAK,QAAA,MAAA7G,EAAA8B,UAAA2E,OAAAK,mBAAAtI,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAC,SAAAvI,KAAAsH,YAAA3D,EAAA6E,cAAA9E,KAAAgE,OAAAM,EAAAS,QAAAf,IAAAM,EAAAU,OAAAhB,IAAAM,EAAAW,OAAAX,EAAAY,OAAAR,SAAAV,OAAAO,MAAAK,mBAAAtI,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAC,SAAAvI,KAAAsH,cACAY,EAAA7I,OAAA,GACAW,KAAAsB,QAAAC,SAAA2G,EAAA,GAAAzG,iBACAzB,KAAAuD,OAAAsF,SAAA,gBAAAhB,kBAAAK,EAAA,GAAArG,oBAAAI,MAAA,UACA,MAAAjC,KAAAwB,MAAA8B,UACAtD,KAAAuD,OAAAsF,SAAA,gBAAAhB,KAAA,uBAAA5F,MAAA,UAEAiG,EAAAlI,KAAAuD,OAAAC,QAAAuD,OAAAC,OAAArD,KAAAkB,gBAAArD,EAAAC,SAAAkC,EAAAwE,WAAArD,MAAAsD,SAAAJ,EAAAK,OACA,IAAAH,EAAA7I,OACAW,KAAAuD,OAAAsF,SAAA,gBAAAhB,KAAA,qBAAA5F,MAAA,UAEAiG,IAAAlB,OAAArD,KAAA6E,cAAA9E,KAAAgE,OAAAM,EAAAS,QAAAf,IAAAM,EAAAU,OAAAhB,IAAAM,EAAAW,OAAAX,EAAAY,OAAAR,SAAAV,KACA,IAAAQ,EAAA7I,OACAW,KAAAuD,OAAAsF,SAAA,gBAAAhB,eAAA7H,KAAArC,eAAA6D,EAAA8B,qBAAAtD,KAAAmE,SAAAC,WAAAC,OAAA,+CAAApC,MAAA,SAEAjC,KAAAuD,OAAAsF,SAAA,gBAAAhB,WAAAK,EAAA,GAAArG,4BAAAI,MAAA,eAIA,CACA,MAAA+F,EAAAhI,KAAAuD,OAAAC,QAAAwE,QACA,GAAAxG,EAAA2G,WAAArD,MAAAsD,SAAAJ,EAAAK,MACA,SAAA7G,EAAA8B,UACA,GAAAtD,KAAAuD,OAAAC,QAAAC,WAAAC,KAAAC,KAAAlC,UAAAD,EAAAC,SAAA,CACA,MAAAwG,EAAAjI,KAAAuD,OAAAC,QAAAC,WAAAyD,KAAAvD,KAAAlC,UAAAD,EAAAC,UACAwG,EAAAK,mBAAAtI,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAC,SAAAvI,KAAAsH,WACAtH,KAAAsB,QAAAC,SAAAC,EAAAC,iBAEAzB,KAAAuD,OAAAsF,SAAA,gBAAAhB,aAAA7H,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAd,OAAA,4BAIA,cAAAhG,EAAAsH,cAAAtH,EAAAgH,cAAA9E,KAAAC,OAAAqE,EAAAS,QAAA9E,IAAAqE,EAAAU,OAAA/E,IAAAqE,EAAAW,OAAAX,EAAAY,OAAAR,SAAAzE,IAEA3D,KAAA+I,OACAC,KAAA,eAAAvH,QAAAD,EAAAC,UACAgF,KAAAwC,IACAjJ,KAAAuD,OAAAsF,SAAA,eAAAK,OAAAC,OAAA,GAAA3H,IACAxB,KAAAuD,OAAAsF,SAAA,gBAAAhB,QAAArG,EAAAK,yBAAAI,MAAA,SACAjC,KAAAsB,QAAAC,SAAAC,EAAAC,mBAEA2H,MAAAC,IACAC,QAAAC,IAAAF,GACArJ,KAAAuD,OAAAsF,SAAA,gBAAAhB,8BAAAwB,KAAAJ,UAAAI,EAAAJ,SAAAvL,KAAA,IAAA2L,EAAAJ,SAAAvL,KAAA8L,QAAA,SAAAvH,MAAA,YAGAjC,KAAAuD,OAAAsF,SAAA,gBAAAhB,KAAA,qBAAA5F,MAAA,cAIA,iBAAAT,EAAAsH,cAAAtH,EAAAgH,cAAA9E,KAAAC,OAAAqE,EAAAS,QAAA9E,IAAAqE,EAAAU,OAAA/E,IAAAqE,EAAAW,OAAAX,EAAAY,OAAAR,SAAAzE,IACA,GAAA3D,KAAAuD,OAAAC,QAAAC,WAAAC,KAAAC,KAAAlC,UAAAD,EAAAC,SAAA,CACA,MAAAwG,EAAAjI,KAAAuD,OAAAC,QAAAC,WAAAyD,KAAAvD,KAAAlC,UAAAD,EAAAC,UACAwG,EAAAK,mBAAAtI,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAC,SAAAvI,KAAAsH,WACAtH,KAAAsB,QAAAC,SAAAC,EAAAC,iBAEAzB,KAAAuD,OAAAsF,SAAA,gBAAAhB,aAAA7H,KAAAsH,QAAAW,EAAAK,kBAAA,YAAAd,OAAA,6BAGAxH,KAAAsB,QAAAC,SAAAC,EAAAC,sBAGAzB,KAAAuD,OAAAsF,SAAA,gBAAAhB,eAAA7H,KAAArC,eAAA6D,EAAA8B,oBAAArB,MAAA,cAIAjC,KAAAuD,OAAAsF,SAAA,gBAAAhB,QAAArG,EAAA2G,WAAArD,MAAA8C,IAAAjE,GAAA3D,KAAA6F,cAAAlC,IAAAoE,KAAA,wBAAA9F,MAAA,WAIA4E,eAAApF,GACA,IAAAwH,EACA,IACAA,QAAAjJ,KAAA+I,OAAAU,sBAAAhI,KACA,MAAA4H,GAGA,OAFAC,QAAAC,IAAAF,GACArJ,KAAAuD,OAAAsF,SAAA,gBAAAhB,QAAAwB,KAAAJ,UAAAI,EAAAJ,SAAAvL,MAAA2L,EAAAJ,SAAAvL,KAAA8L,SAAA,wBAAAvH,MAAA,WACA,EAGA,OADAjC,KAAA0J,SAAAT,EAAAvL,OACA,GAEAmJ,gBACA7G,KAAAsB,QAAAC,SAAAvB,KAAAyB,kBAEAoF,SAAArF,GACAxB,KAAAwB,QACAmI,SAAAC,MAAApI,EAAAK,UAAAL,EAAAK,UAAA,qBACA7B,KAAAuD,OAAAsF,SAAA,wBAAA7I,KAAAwB,MAAA8B,UAAA,UAEAuD,oBACA7G,KAAAoD,cACApD,KAAAsB,QAAAC,KAAA,IAAAvB,KAAAoD,eAGAyD,YACA7G,KAAA+I,OACAC,KAAA,eAAAvH,QAAAzB,KAAAwB,MAAAC,UACAgF,KAAAwC,IACAjJ,KAAAuD,OAAAsF,SAAA,eAAAK,OAAAC,OAAA,GAAAnJ,KAAAwB,QACAxB,KAAAuD,OAAAsF,SAAA,gBAAAhB,QAAA7H,KAAAwB,MAAAK,0CAAAI,MAAA,cAEAmH,MAAAC,IACAC,QAAAC,IAAAF,GACArJ,KAAAuD,OAAAsF,SAAA,gBAAAhB,QAAAwB,KAAAJ,UAAAI,EAAAJ,SAAAvL,MAAA2L,EAAAJ,SAAAvL,KAAA8L,YAAAxJ,KAAAwB,MAAAK,4BAAAI,MAAA,aAGA4E,aACA7G,KAAAkF,UAAAlF,KAAAkF,SAAAzD,UAAAzB,KAAAwB,MAAAC,QACAzB,KAAAiF,QAAA,EAEAjF,KAAA+I,OACAU,IAAA,UAAAvI,OAAA,CAAAO,QAAAzB,KAAAwB,MAAAC,WACAgF,KAAAwC,IACAjJ,KAAAkF,SAAA+D,EAAAvL,KACAsC,KAAAiF,QAAA,IAEAmE,MAAAC,IACAC,QAAAC,IAAAF,GACArJ,KAAAuD,OAAAsF,SAAA,gBAAAhB,uBAAAwB,KAAAJ,UAAAI,EAAAJ,SAAAvL,KAAA,IAAA2L,EAAAJ,SAAAvL,KAAA8L,QAAA,SAAAvH,MAAA,aAIA4E,cACA7G,KAAAiF,QAAA,IAGA4B,UACA7G,KAAA6J,MAAA,gBAAAC,EAAA,MACA9J,KAAAuD,OAAAsF,SAAA,2BACA7I,KAAAuD,OAAAC,QAAAoF,OACA5I,KAAA+F,WAAA/F,KAAAuD,OAAAC,QAAAoF,OAEA5I,KAAA+I,OACAU,IAAA,UAAAM,QAAA,CAAAC,QAAA,KACAvD,KAAAwC,IACAA,EAAAvL,KAAAuM,QAAAtG,IACA,MAAAA,EAAAuG,WAAA,MAAAvG,EAAAuG,WAAA,MAAAvG,EAAAuG,YACAvG,EAAAuG,UAAA,OAGAlK,KAAA+F,WAAAkD,EAAAvL,KAAAyM,KAAA,CAAAC,EAAAC,IAAAD,EAAAF,UAAAG,EAAAH,WAAA,EAAAE,EAAAF,YAAAG,EAAAH,UAAA,KACA,IAAAI,EAAA,KACAhL,EAAA,EACA,MAAAA,EAAAU,KAAA+F,WAAA1G,OACAiL,IAAAtK,KAAA+F,WAAAzG,GAAA4K,YACAI,GACAA,EAAAtK,KAAA+F,WAAAzG,GAAA4K,UACAlK,KAAA+F,WAAAkB,OAAA3H,EAAA,GAAAiL,SAAA,IACAjL,KAEAgL,EAAAtK,KAAA+F,WAAAzG,GAAA4K,UAEAlK,KAAA+F,WAAAkB,OAAA3H,EAAA,GAAAkL,OAAAnF,EAAAiF,KACAhL,KAEAA,IAEAU,KAAA+F,WAAA/F,KAAA+F,WAAA6B,IAAAjE,KAAA0B,UAAA,CAAAwC,KAAAlE,EAAA0B,UAAApC,MAAAU,EAAAgE,SAAAhE,GACA3D,KAAAuD,OAAAsF,SAAA,YAAA7I,KAAA+F,cAEAqD,MAAAC,IACArJ,KAAAuD,OAAAsF,SAAA,gBAAAhB,0BAAAwB,KAAAJ,UAAAI,EAAAJ,SAAAvL,KAAA,IAAA2L,EAAAJ,SAAAvL,KAAA8L,QAAA,cAIA3C,wBAAA4D,EAAAC,EAAAC,GACA3K,KAAAuD,OAAAC,QAAAuD,OAAArD,KAAAC,KAAAlC,UAAAgJ,EAAAvJ,OAAAO,UACAzB,KAAA0J,SAAA1J,KAAAuD,OAAAC,QAAAuD,OAAAG,KAAAvD,KAAAlC,UAAAgJ,EAAAvJ,OAAAO,UACAzB,KAAAuD,OAAAsF,SAAA,2BACA7I,KAAA4K,UAAA,IAAA5K,KAAAoD,aAAA,MACAuH,WACA3K,KAAA6K,SAAAJ,EAAAvJ,OAAAO,UACAzB,KAAAuD,OAAAsF,SAAA,2BACA7I,KAAA4K,UAAA,IAAA5K,KAAAoD,aAAA,MACAuH,KAEAA,EAAA,qBAGA9D,uBAAA4D,EAAAC,EAAAC,GACA,GAAAG,EAAA,KAAAC,IAAAxH,OAAAC,QAAAuD,OAAArD,KAAAC,KAAAlC,UAAAgJ,EAAAvJ,OAAAO,SACAkJ,EAAAK,IACAA,EAAAtB,SAAAoB,EAAA,KAAAC,IAAAxH,OAAAC,QAAAuD,OAAAG,KAAAvD,KAAAlC,UAAAgJ,EAAAvJ,OAAAO,gBAEA,CACA,IAAAD,EACA,IACAA,QAAAsJ,EAAA,KAAAC,IAAAhC,OAAAU,IAAA,UAAAvI,OAAA,CAAAO,QAAAgJ,EAAAvJ,OAAAO,WACA,MAAA4H,GAEA,YADAsB,EAAA,iBAAAtB,EAAAJ,UAAAI,EAAAJ,SAAAgC,QAAA,QAGAN,EAAAK,IACAA,EAAAtB,SAAAlI,EAAA9D,WC5VgZwN,EAAA,0BCQhZC,EAAgBjC,OAAAkC,EAAA,KAAAlC,CACdgC,EACApL,EACAsF,GACF,EACA,KACA,KACA,MAIeiG,EAAA,WAAAF","file":"js/chunk-08bfca49.f1245b1c.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=style&index=0&lang=css&\"","import moment from 'moment'\nconst BoardMixins = {\n  data () {\n    return {\n      boardTypeItems: {\n        T: '토픽',\n        L: '라운지',\n        D: '아카이브',\n        X: '게시판',\n        E: '전직교사',\n        N: '예비교사'\n      },\n      webUrl: process.env.VUE_APP_WEB_URL\n    }\n  },\n  methods: {\n    uuid () {\n      let partialUUID = () => {\n        return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n      };\n      return partialUUID() + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + partialUUID() + partialUUID()\n    },\n    dataURItoBlob (dataURI) {\n      // convert base64/URLEncoded data component to raw binary data held in a string\n      var byteString;\n      if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n        byteString = atob(dataURI.split(',')[1]);\n      } else {\n        byteString = unescape(dataURI.split(',')[1]);\n      }\n\n      var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      // write the bytes of the string to a typed array\n      var ia = new Uint8Array(byteString.length);\n      for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      return new Blob([ia], { type: mimeString });\n    },\n    timeParser (timestamp) {\n      return moment(timestamp, 'YYYYMMDDHHmmss').fromNow()\n    }\n  }\n}\n\nexport default BoardMixins\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.board)?_c('v-container',{attrs:{\"fluid\":\"\",\"pt-2\":\"\"}},[_c('v-card',{staticClass:\"mb-2\",attrs:{\"flat\":\"\"}},[_c('v-card-title',{staticClass:\"py-2\",attrs:{\"primary-title\":\"\"}},[_c('v-layout',{attrs:{\"column\":\"\"}},[_c('v-flex',[_c('v-layout',{attrs:{\"row\":\"\",\"align-center\":\"\"}},[_c('v-flex',[_c('v-layout',{attrs:{\"row\":\"\",\"align-center\":\"\"}},[_c('span',{staticClass:\"title cursor-pointer\",on:{\"click\":function($event){_vm.$route.params.documentId || _vm.$route.path.endsWith('write')?_vm.$router.push('/'+_vm.board.boardId):_vm.openDialog()}}},[_vm._v(_vm._s(_vm.board.boardName))]),(_vm.reservedContents)?_c('v-tooltip',{staticClass:\"cursor-default\",attrs:{\"bottom\":\"\",\"close-delay\":\"500\"}},[_c('v-icon',{staticClass:\"ml-1 vertical-align-middle\",attrs:{\"slot\":\"activator\",\"color\":\"primary\"},slot:\"activator\"},[_vm._v(\"event_note\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.reservedContents)}})],1):_vm._e(),(_vm.childBoardItems.length > 1)?_c('span',{staticClass:\"ml-2\"},[_c('v-select',{staticClass:\"hideLine dense childBoardSelector mt-0 pt-0\",attrs:{\"id\":\"childBoardSelector\",\"flat\":\"\",\"dense\":\"\",\"items\":_vm.childBoardItems,\"item-text\":\"boardName\",\"item-value\":\"boardId\",\"single-line\":\"\",\"hide-details\":\"\"},on:{\"input\":_vm.childBoardChanged},model:{value:(_vm.childBoardId),callback:function ($$v) {_vm.childBoardId=$$v},expression:\"childBoardId\"}})],1):(_vm.board.boardType === 'T' && _vm.board.boardId !== 'topicBest' && !_vm.$store.getters.userBoards.some(function (x){ return x.boardId === _vm.board.boardId; }))?_c('v-btn',{staticClass:\"short my-0\",attrs:{\"small\":\"\",\"depressed\":\"\",\"color\":\"accent\"},on:{\"click\":_vm.openDialog}},[_vm._v(\"구독\")]):_vm._e()],1)],1),_c('v-spacer'),_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.$route.path.endsWith('write') && !_vm.$route.path.endsWith('edit') && ((_vm.$route.params.boardId !== 'loungeBest' && _vm.$route.params.boardId !== 'topicBest') || (_vm.documentBoardId && _vm.$route.params.documentId))),expression:\"!$route.path.endsWith('write') && !$route.path.endsWith('edit') && (($route.params.boardId !== 'loungeBest' && $route.params.boardId !== 'topicBest') || (documentBoardId && $route.params.documentId))\"}],staticClass:\"ma-0\",attrs:{\"depressed\":\"\",\"color\":\"primary\",\"icon\":\"\",\"small\":_vm.$vuetify.breakpoint.xsOnly},on:{\"click\":_vm.moveToWriteDocument}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"edit\")])],1)],1)],1),_c('v-flex',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.board.boardDescription),expression:\"board.boardDescription\"}]},[_c('span',{staticClass:\"caption\"},[_vm._v(\"\\n            \"+_vm._s(_vm.board.boardDescription)+\"\\n            \"),_c('v-icon',{staticClass:\"vertical-align-middle\",attrs:{\"small\":\"\"},on:{\"click\":_vm.openDialog}},[_vm._v(\"info\")])],1)])],1)],1)],1),_c('v-card',{class:{'my-3':_vm.$route.path.endsWith('write') || _vm.$route.path.endsWith('edit')},attrs:{\"flat\":\"\"}},[_c('router-view',{attrs:{\"board\":_vm.board,\"documentBoardId\":_vm.documentBoardId},on:{\"update:documentBoardId\":function($event){_vm.documentBoardId=$event},\"update:document-board-id\":function($event){_vm.documentBoardId=$event}}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.$route.path.endsWith('write') && !_vm.$route.path.endsWith('edit')),expression:\"!$route.path.endsWith('write') && !$route.path.endsWith('edit')\"}],attrs:{\"flat\":\"\"}},[_c('document-list',{attrs:{\"board\":_vm.board,\"hasChildren\":!_vm.board.parentBoardId && _vm.childBoardItems.length > 1,\"documentBoardId\":_vm.documentBoardId},on:{\"write\":_vm.moveToWriteDocument,\"update:documentBoardId\":function($event){_vm.documentBoardId=$event},\"update:document-board-id\":function($event){_vm.documentBoardId=$event}}})],1),_c('v-dialog',{attrs:{\"max-width\":\"800\",\"lazy\":\"\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('board-information',{attrs:{\"board\":_vm.selected},on:{\"closeDialog\":_vm.closeDialog}})],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container fluid v-if=\"board\" pt-2>\n    <v-card flat class=\"mb-2\">\n      <v-card-title primary-title class=\"py-2\">\n        <v-layout column>\n          <v-flex>\n            <v-layout row align-center>\n              <v-flex>\n                <v-layout row align-center>\n                  <span class=\"title cursor-pointer\" @click=\"$route.params.documentId || $route.path.endsWith('write')?$router.push('/'+board.boardId):openDialog()\">{{board.boardName}}</span>\n                  <v-tooltip bottom v-if=\"reservedContents\" close-delay=\"500\" class=\"cursor-default\">\n                    <v-icon slot=\"activator\" class=\"ml-1 vertical-align-middle\" color=\"primary\">event_note</v-icon>\n                    <span v-html=\"reservedContents\"></span>\n                  </v-tooltip>\n                  <span class=\"ml-2\" v-if=\"childBoardItems.length > 1\">\n                    <v-select id=\"childBoardSelector\" class=\"hideLine dense childBoardSelector mt-0 pt-0\" flat dense v-model=\"childBoardId\" :items=\"childBoardItems\" item-text=\"boardName\" item-value=\"boardId\" single-line hide-details @input=\"childBoardChanged\"></v-select>\n                  </span>\n                  <v-btn small depressed class=\"short my-0\" color=\"accent\" v-else-if=\"board.boardType === 'T' && board.boardId !== 'topicBest' && !$store.getters.userBoards.some(x=>x.boardId === board.boardId)\" @click=\"openDialog\">구독</v-btn>\n                </v-layout>\n              </v-flex>\n              <v-spacer/>\n              <v-btn depressed color=\"primary\" icon class=\"ma-0\" @click=\"moveToWriteDocument\" v-show=\"!$route.path.endsWith('write') && !$route.path.endsWith('edit') && (($route.params.boardId !== 'loungeBest' && $route.params.boardId !== 'topicBest') || (documentBoardId && $route.params.documentId))\" :small=\"$vuetify.breakpoint.xsOnly\">\n                <v-icon small>edit</v-icon>\n              </v-btn>\n            </v-layout>\n          </v-flex>\n          <v-flex v-show=\"board.boardDescription\">\n            <span class=\"caption\">\n              {{board.boardDescription}}\n              <v-icon small @click=\"openDialog\" class=\"vertical-align-middle\">info</v-icon>\n            </span>\n          </v-flex>\n        </v-layout>\n      </v-card-title>\n    </v-card>\n    <v-card flat :class=\"{'my-3':$route.path.endsWith('write') || $route.path.endsWith('edit')}\">\n      <router-view :board=\"board\" :documentBoardId.sync=\"documentBoardId\"/>\n    </v-card>\n    <v-card flat v-show=\"!$route.path.endsWith('write') && !$route.path.endsWith('edit')\">\n      <document-list :board=\"board\" :hasChildren=\"!board.parentBoardId && childBoardItems.length > 1\" @write=\"moveToWriteDocument\" :documentBoardId.sync=\"documentBoardId\"/>\n    </v-card>\n    <v-dialog v-model=\"dialog\" max-width=\"800\" lazy>\n      <board-information :board=\"selected\" @closeDialog=\"closeDialog\"></board-information>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport MainLayout from '@/layouts/MainLayout';\nimport router from '@/router';\nimport BoardMixins from '@/components/mixins/BoardMixins';\nconst groupName = { M: '전공', G: '학년', N: '일반', R: '지역', Z: '인증' };\nexport default {\n  name: 'Board',\n  data: () => ({\n    board: undefined,\n    writeButton: true,\n    childBoardId: null,\n    dialog: false,\n    selected: null,\n    userAuthItems: {\n      N: '예비교사',\n      A: '인증',\n      E: '전직교사',\n      D: '인증제한'\n    },\n    groupItems: [],\n    allGroupAuthItems: { READWRITE: '전체구독허용', READONLY: '읽기공개', NONE: '비공개' },\n    documentBoardId: null\n  }),\n  props: ['boardId'],\n  mixins: [BoardMixins],\n  components: {\n    DocumentList: () => import('@/components/board/DocumentList'),\n    BoardInformation: () => import('@/components/BoardInformation')\n  },\n  computed: {\n    childBoardItems () {\n      if (this.board.parentBoardId) {\n        let siblings = this.$store.getters.boards.filter(x => x.parentBoardId === this.board.parentBoardId && x.boardId !== this.boardId);\n        siblings.splice(0, 0, this.$store.getters.boards.find(x => x.boardId === this.board.parentBoardId));\n        siblings.splice(0, 0, { boardId: null, boardName: this.childBoardLabel });\n        return siblings;\n      } else {\n        let children = this.$store.getters.boards.filter(x => x.parentBoardId === this.boardId);\n        children.splice(0, 0, { boardId: null, boardName: this.childBoardLabel });\n        return children;\n      }\n    },\n    childBoardLabel () {\n      return (this.board.parentBoardId ? '관련 ' : '하위 ') + this.boardTypeItems[this.board.boardType];\n    },\n    reservedContents () {\n      if (this.board && this.board.reservedContents) {\n        let reservedContents = this.board.reservedContents;\n        let string = this.$moment(this.board.reservedDate, 'YYYYMMDD').format('Y.M.D 이후 아래와 같이 변경될 예정입니다.<br>');\n        for (let key in reservedContents) {\n          switch (key) {\n            case 'boardName':\n              string += `${this.boardTypeItems[this.board.boardType]} 이름 : ${reservedContents[key]}<br>`;\n              break;\n            case 'boardDescription':\n              string += `${this.boardTypeItems[this.board.boardType]} 설명 : ${reservedContents[key]}<br>`;\n              break;\n            case 'allowAnonymous':\n              string += `익명글 : ${reservedContents[key] ? '허용' : '비허용'}<br>`;\n              break;\n            case 'useCategory':\n              string += `카테고리 : ${reservedContents[key] ? '사용' : '미사용'}<br>`;\n              break;\n            case 'allGroupAuth':\n              string += `${this.boardTypeItems[this.board.boardType]} 공개/비공개 : ${this.allGroupAuthItems[reservedContents[key]]}<br>`;\n              break;\n            case 'ownerNickName':\n              string += `${this.boardTypeItems[this.board.boardType]}지기 : ${reservedContents[key]}<br>`;\n              break;\n            case 'auth':\n              string += `구독(글쓰기) 권한 : ${reservedContents[key]\n                .filter(x => this.groupItems.some(y => y.value === x.groupId))\n                .map(x => this.groupItems.find(y => y.value === x.groupId).text + (x.command === 'INSERT' ? ' 추가' : x.command === 'DELETE' ? ' 삭제' : ''))\n                .join(', ')}<br>`;\n              break;\n            case 'status':\n              string += reservedContents[key] === 'DELETED' ? `<b>${this.boardTypeItems[this.board.boardType]} 삭제 예정</b><br>` : '';\n              break;\n          }\n        }\n        return string;\n      } else {\n        return null;\n      }\n    }\n  },\n  methods: {\n    moveToWriteDocument () {\n      let board = this.board;\n      let childBoardItems = this.childBoardItems;\n      if ((board.boardId === 'loungeBest' || board.boardId === 'topicBest') && this.documentBoardId) {\n        board = this.$store.getters.boards.find(x => x.boardId === this.documentBoardId);\n        if (!board) {\n          board = this.board;\n        }\n        if (board.parentBoardId) {\n          childBoardItems = this.$store.getters.boards.filter(x => x.parentBoardId === this.board.parentBoardId && x.boardId !== this.boardId);\n          childBoardItems.splice(0, 0, this.$store.getters.boards.find(x => x.boardId === this.board.parentBoardId));\n          childBoardItems.splice(0, 0, { boardId: null, boardName: this.childBoardLabel });\n        } else {\n          childBoardItems = this.$store.getters.boards.filter(x => x.parentBoardId === this.boardId);\n          childBoardItems.splice(0, 0, { boardId: null, boardName: this.childBoardLabel });\n        }\n      }\n      if (!board.parentBoardId && childBoardItems.length > 1) {\n        const profile = this.$store.getters.profile;\n        const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n        let available = this.$store.getters.boards.filter(x => x.parentBoardId === board.boardId && x.statusAuth.write.includes(profile.auth) && (board.boardType === 'T' ? userBoard && (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').isBefore(this.$moment())) : x.allowedGroups.some(y => y === profile.region || y === profile.major || y === profile.grade || profile.groups.includes(y)) && (!userBoard || !userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').isBefore(this.$moment()))));\n        if (available.length > 0) {\n          this.$router.push(`/${available[0].boardId}/write`);\n          this.$store.dispatch('showSnackbar', { text: `글을 쓸 수 있는 ${available[0].boardName}에 작성됩니다.`, color: 'info' });\n        } else if (this.board.boardType === 'T') {\n          this.$store.dispatch('showSnackbar', { text: '글을 쓸 토픽을 선택하여 구독해주세요', color: 'info' });\n        } else {\n          available = this.$store.getters.boards.filter(x => x.parentBoardId === board.boardId && x.statusAuth.write.includes(profile.auth));\n          if (available.length === 0) {\n            this.$store.dispatch('showSnackbar', { text: '인증 후에 글을 쓸 수 있습니다.', color: 'info' });\n          } else {\n            available = available.filter(x => x.allowedGroups.some(y => y === profile.region || y === profile.major || y === profile.grade || profile.groups.includes(y)));\n            if (available.length === 0) {\n              this.$store.dispatch('showSnackbar', { text: `현재 소속된 ${this.boardTypeItems[board.boardType]}가 없습니다. ${this.$vuetify.breakpoint.xsOnly ? '학년, 전공을 지정해주세요.' : '내 계정정보에서 학년, 전공을 지정해주세요.'}`, color: 'info' });\n            } else {\n              this.$store.dispatch('showSnackbar', { text: `현재 ${available[0].boardName}에 글쓰기가 제한되어있습니다.`, color: 'info' });\n            }\n          }\n        }\n      } else {\n        const profile = this.$store.getters.profile;\n        if (board.statusAuth.write.includes(profile.auth)) {\n          if (board.boardType === 'T') {\n            if (this.$store.getters.userBoards.some(x => x.boardId === board.boardId)) {\n              const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n              if (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').isBefore(this.$moment())) {\n                this.$router.push(`/${board.boardId}/write`);\n              } else {\n                this.$store.dispatch('showSnackbar', { text: `글쓰기가 ${this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').format('Y/M/D')}까지 제한되었습니다.` });\n              }\n            } else {\n              // need subscription\n              if (board.allGroupAuth === 'READWRITE' || board.allowedGroups.some(x => x === profile.region || x === profile.major || x === profile.grade || profile.groups.includes(x))) {\n                // i can subscribe this board!\n                this.$axios\n                  .post('/user/board', { boardId: board.boardId })\n                  .then(response => {\n                    this.$store.dispatch('addUserBoard', Object.assign({}, board));\n                    this.$store.dispatch('showSnackbar', { text: `${board.boardName} 토픽을 구독하였습니다.`, color: 'info' });\n                    this.$router.push(`/${board.boardId}/write`);\n                  })\n                  .catch(error => {\n                    console.log(error);\n                    this.$store.dispatch('showSnackbar', { text: `글을 쓰기 위한 구독을 하지 못했습니다.${error && error.response && error.response.data ? '[' + error.response.data.message + ']' : ''}`, color: 'error' });\n                  });\n              } else {\n                this.$store.dispatch('showSnackbar', { text: '내가 구독할 수 없는 토픽입니다.', color: 'info' });\n              }\n            }\n          } else {\n            if (board.allGroupAuth === 'READWRITE' || board.allowedGroups.some(x => x === profile.region || x === profile.major || x === profile.grade || profile.groups.includes(x))) {\n              if (this.$store.getters.userBoards.some(x => x.boardId === board.boardId)) {\n                const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n                if (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').isBefore(this.$moment())) {\n                  this.$router.push(`/${board.boardId}/write`);\n                } else {\n                  this.$store.dispatch('showSnackbar', { text: `글쓰기가 ${this.$moment(userBoard.writeRestrictDate, 'YYYYMMDD').format('Y/M/D')}까지 제한되었습니다.` });\n                }\n              } else {\n                this.$router.push(`/${board.boardId}/write`);\n              }\n            } else {\n              this.$store.dispatch('showSnackbar', { text: `현재 소속된 ${this.boardTypeItems[board.boardType]}가 아닙니다.`, color: 'info' });\n            }\n          }\n        } else {\n          this.$store.dispatch('showSnackbar', { text: `${board.statusAuth.write.map(x => this.userAuthItems[x]).join(', ')}회원만 글을 쓸 수 있습니다.`, color: 'info' });\n        }\n      }\n    },\n    async getBoard (boardId) {\n      let response;\n      try {\n        response = await this.$axios.get(`/board?boardId=${boardId}`);\n      } catch (error) {\n        console.log(error);\n        this.$store.dispatch('showSnackbar', { text: `${error && error.response && error.response.data ? error.response.data.message || '게시판 정보를 가져오지 못했습니다.' : '게시판 정보를 가져오지 못했습니다.'}`, color: 'error' });\n        return false;\n      }\n      this.setBoard(response.data);\n      return true;\n    },\n    writeDocument () {\n      this.$router.push(`/${this.boardId}/write`);\n    },\n    setBoard (board) {\n      this.board = board;\n      document.title = board.boardName ? board.boardName + ' - Pedagy' : 'Pedagy';\n      this.$store.dispatch('switchBoardType', this.board.boardType === 'T' ? 'T' : 'L');\n    },\n    childBoardChanged () {\n      if (this.childBoardId) {\n        this.$router.push('/' + this.childBoardId);\n      }\n    },\n    subscribe () {\n      this.$axios\n        .post('/user/board', { boardId: this.board.boardId })\n        .then(response => {\n          this.$store.dispatch('addUserBoard', Object.assign({}, this.board));\n          this.$store.dispatch('showSnackbar', { text: `${this.board.boardName} 토픽을 구독하였습니다! 구독 기념 글을 작성해보세요.`, color: 'success' });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$store.dispatch('showSnackbar', { text: `${error && error.response && error.response.data ? error.response.data.message || `${this.board.boardName} 구독을 하지 못했습니다.` : `${this.board.boardName} 구독을 하지 못했습니다.`}`, color: 'error' });\n        });\n    },\n    openDialog () {\n      if (this.selected && this.selected.boardId === this.board.boardId) {\n        this.dialog = true;\n      } else {\n        this.$axios\n          .get('/board', { params: { boardId: this.board.boardId } })\n          .then(response => {\n            this.selected = response.data;\n            this.dialog = true;\n          })\n          .catch(error => {\n            console.log(error);\n            this.$store.dispatch('showSnackbar', { text: `정보를 가져오지 못했습니다.${error && error.response && error.response.data ? '[' + error.response.data.message + ']' : ''}`, color: 'error' });\n          });\n      }\n    },\n    closeDialog () {\n      this.dialog = false;\n    }\n  },\n  created () {\n    this.$emit('update:layout', MainLayout);\n    this.$store.dispatch('setColumnType', 'HIDE_SM');\n    if (this.$store.getters.groups) {\n      this.groupItems = this.$store.getters.groups;\n    } else {\n      this.$axios\n        .get('/group', { headers: { silent: true } })\n        .then(response => {\n          response.data.forEach(x => {\n            if (x.groupType === 'N' || x.groupType === 'D' || x.groupType === 'E') {\n              x.groupType = 'Z';\n            }\n          });\n          this.groupItems = response.data.sort((a, b) => (a.groupType < b.groupType ? -1 : a.groupType === b.groupType ? 0 : 1));\n          let previous = null;\n          let i = 0;\n          while (i < this.groupItems.length) {\n            if (previous !== this.groupItems[i].groupType) {\n              if (previous) {\n                previous = this.groupItems[i].groupType;\n                this.groupItems.splice(i, 0, { divider: true });\n                i++;\n              } else {\n                previous = this.groupItems[i].groupType;\n              }\n              this.groupItems.splice(i, 0, { header: groupName[previous] });\n              i++;\n            }\n            i++;\n          }\n          this.groupItems = this.groupItems.map(x => (x.groupName ? { text: x.groupName, value: x.groupId } : x));\n          this.$store.dispatch('setGroups', this.groupItems);\n        })\n        .catch(error => {\n          this.$store.dispatch('showSnackbar', { text: `그룹 목록을 가져오지 못했습니다.${error && error.response && error.response.data ? '[' + error.response.data.message + ']' : ''}` });\n        });\n    }\n  },\n  async beforeRouteUpdate (to, from, next) {\n    if (this.$store.getters.boards.some(x => x.boardId === to.params.boardId)) {\n      this.setBoard(this.$store.getters.boards.find(x => x.boardId === to.params.boardId));\n      this.$store.dispatch('setColumnType', 'HIDE_SM');\n      this.$nextTick(() => (this.childBoardId = null));\n      next();\n    } else if (await this.getBoard(to.params.boardId)) {\n      this.$store.dispatch('setColumnType', 'HIDE_SM');\n      this.$nextTick(() => (this.childBoardId = null));\n      next();\n    } else {\n      next('/error?error=404');\n    }\n  },\n  async beforeRouteEnter (to, from, next) {\n    if (router.app.$store.getters.boards.some(x => x.boardId === to.params.boardId)) {\n      next(vm => {\n        vm.setBoard(router.app.$store.getters.boards.find(x => x.boardId === to.params.boardId));\n      });\n    } else {\n      let board;\n      try {\n        board = await router.app.$axios.get('/board', { params: { boardId: to.params.boardId } });\n      } catch (error) {\n        next('/error?error=' + (error.response ? error.response.status || '404' : '404'));\n        return;\n      }\n      next(vm => {\n        vm.setBoard(board.data);\n      });\n    }\n  }\n};\n</script>\n<style>\n#childBoardSelector {\n  display:none;\n}\n.childBoardSelector {\n  font-size: 14px;\n}\n.childBoardSelector .v-input__append-inner {\n  margin-left: 0;\n  padding-left:0;\n  cursor: pointer;\n}\n.childBoardSelector .v-input__slot {\n  padding-bottom: 0;\n}\n.childBoardSelector .v-select__selection {\n  cursor: pointer;\n  white-space:nowrap;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Board.vue?vue&type=template&id=2c4b7c2c&\"\nimport script from \"./Board.vue?vue&type=script&lang=js&\"\nexport * from \"./Board.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Board.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}