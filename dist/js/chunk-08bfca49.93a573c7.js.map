{"version":3,"sources":["webpack:///./src/views/Board.vue?a4a7","webpack:///./src/components/mixins/BoardMixins.js","webpack:///./src/views/Board.vue?fd94","webpack:///src/views/Board.vue","webpack:///./src/views/Board.vue?ab02","webpack:///./src/views/Board.vue"],"names":["_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_Board_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_dist_cjs_js_ref_6_oneOf_1_1_node_modules_vue_cli_service_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_cli_service_node_modules_vue_loader_lib_index_js_vue_loader_options_Board_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","BoardMixins","data","boardTypeItems","T","L","D","X","E","N","webUrl","process","methods","uuid","partialUUID","Math","random","toString","substring","dataURItoBlob","dataURI","byteString","split","indexOf","atob","unescape","mimeString","ia","Uint8Array","length","i","charCodeAt","Blob","type","timeParser","timestamp","moment","fromNow","render","_vm","this","_h","$createElement","_c","_self","attrs","fluid","staticClass","flat","primary-title","column","row","align-center","on","click","$event","$route","params","documentId","path","endsWith","$router","push","board","boardId","openDialog","_v","_s","boardName","bottom","close-delay","slot","color","domProps","innerHTML","reservedContents","_e","childBoardItems","id","dense","items","item-text","item-value","single-line","hide-details","input","childBoardChanged","model","value","callback","$$v","childBoardId","expression","boardType","$store","getters","userBoards","some","x","small","depressed","directives","name","rawName","documentBoardId","icon","$vuetify","breakpoint","xsOnly","moveToWriteDocument","boardDescription","class","my-3","update:documentBoardId","hasChildren","parentBoardId","write","max-width","lazy","dialog","selected","closeDialog","staticRenderFns","groupName","M","G","R","Z","Boardvue_type_script_lang_js_","undefined","writeButton","userAuthItems","A","groupItems","allGroupAuthItems","READWRITE","READONLY","NONE","props","mixins","components","DocumentList","e","then","bind","BoardInformation","computed","_this","siblings","boards","filter","splice","find","childBoardLabel","children","_this2","string","$moment","reservedDate","format","key","concat","y","groupId","map","text","command","join","_this3","profile","userBoard","available","statusAuth","includes","auth","writeRestrictDate","isBefore","allowedGroups","region","major","grade","groups","dispatch","_profile","_userBoard","allGroupAuth","$axios","post","response","Object","assign","catch","error","console","log","message","_userBoard2","getBoard","_getBoard","_asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","get","sent","t0","abrupt","setBoard","stop","_x","apply","arguments","writeDocument","document","title","subscribe","_this4","_this5","created","_this6","$emit","MainLayout","headers","silent","forEach","groupType","sort","b","previous","divider","header","beforeRouteUpdate","_beforeRouteUpdate","_callee2","to","from","_this7","_context2","$nextTick","_x2","_x3","_x4","beforeRouteEnter","_beforeRouteEnter","_callee3","_context3","router","app","vm","status","_x5","_x6","_x7","views_Boardvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-08bfca49.93a573c7.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=style&index=0&lang=css&\"","import moment from 'moment'\nconst BoardMixins = {\n  data () {\n    return {\n      boardTypeItems: {\n        T: '토픽',\n        L: '라운지',\n        D: '아카이브',\n        X: '게시판',\n        E: '전직교사',\n        N: '예비교사'\n      },\n      webUrl: process.env.VUE_APP_WEB_URL\n    }\n  },\n  methods: {\n    uuid () {\n      let partialUUID = () => {\n        return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n      };\n      return partialUUID() + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + '-' + partialUUID() + partialUUID() + partialUUID()\n    },\n    dataURItoBlob (dataURI) {\n      // convert base64/URLEncoded data component to raw binary data held in a string\n      var byteString;\n      if (dataURI.split(',')[0].indexOf('base64') >= 0) {\n        byteString = atob(dataURI.split(',')[1]);\n      } else {\n        byteString = unescape(dataURI.split(',')[1]);\n      }\n\n\n      var mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n      // write the bytes of the string to a typed array\n      var ia = new Uint8Array(byteString.length);\n      for (var i = 0; i < byteString.length; i++) {\n        ia[i] = byteString.charCodeAt(i);\n      }\n      return new Blob([ia], { type: mimeString });\n    },\n    timeParser (timestamp) {\n      return moment(timestamp, 'YYYYMMDDHHmmss').fromNow()\n    }\n  }\n}\n\nexport default BoardMixins\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.board)?_c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-card',{staticClass:\"mb-2\",attrs:{\"flat\":\"\"}},[_c('v-card-title',{staticClass:\"py-2\",attrs:{\"primary-title\":\"\"}},[_c('v-layout',{attrs:{\"column\":\"\"}},[_c('v-flex',[_c('v-layout',{attrs:{\"row\":\"\",\"align-center\":\"\"}},[_c('v-flex',[_c('v-layout',{attrs:{\"row\":\"\",\"align-center\":\"\"}},[_c('span',{staticClass:\"title cursor-pointer\",on:{\"click\":function($event){_vm.$route.params.documentId || _vm.$route.path.endsWith('write')?_vm.$router.push('/'+_vm.board.boardId):_vm.openDialog()}}},[_vm._v(_vm._s(_vm.board.boardName))]),(_vm.reservedContents)?_c('v-tooltip',{staticClass:\"cursor-default\",attrs:{\"bottom\":\"\",\"close-delay\":\"500\"}},[_c('v-icon',{staticClass:\"ml-1 vertical-align-middle\",attrs:{\"slot\":\"activator\",\"color\":\"primary\"},slot:\"activator\"},[_vm._v(\"event_note\")]),_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.reservedContents)}})],1):_vm._e(),(_vm.childBoardItems.length > 1)?_c('span',{staticClass:\"ml-2\"},[_c('v-select',{staticClass:\"hideLine dense childBoardSelector mt-0 pt-0\",attrs:{\"id\":\"childBoardSelector\",\"flat\":\"\",\"dense\":\"\",\"items\":_vm.childBoardItems,\"item-text\":\"boardName\",\"item-value\":\"boardId\",\"single-line\":\"\",\"hide-details\":\"\"},on:{\"input\":_vm.childBoardChanged},model:{value:(_vm.childBoardId),callback:function ($$v) {_vm.childBoardId=$$v},expression:\"childBoardId\"}})],1):(_vm.board.boardType === 'T' && _vm.board.boardId !== 'topicBest' && !_vm.$store.getters.userBoards.some(function (x){ return x.boardId === _vm.board.boardId; }))?_c('v-btn',{staticClass:\"short my-0\",attrs:{\"small\":\"\",\"depressed\":\"\",\"color\":\"accent\"},on:{\"click\":_vm.openDialog}},[_vm._v(\"구독\")]):_vm._e()],1)],1),_c('v-spacer'),_c('v-btn',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.$route.path.endsWith('write') && !_vm.$route.path.endsWith('edit') && ((_vm.$route.params.boardId !== 'loungeBest' && _vm.$route.params.boardId !== 'topicBest') || (_vm.documentBoardId && _vm.$route.params.documentId))),expression:\"!$route.path.endsWith('write') && !$route.path.endsWith('edit') && (($route.params.boardId !== 'loungeBest' && $route.params.boardId !== 'topicBest') || (documentBoardId && $route.params.documentId))\"}],staticClass:\"ma-0\",attrs:{\"depressed\":\"\",\"color\":\"primary\",\"icon\":\"\",\"small\":_vm.$vuetify.breakpoint.xsOnly},on:{\"click\":_vm.moveToWriteDocument}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"edit\")])],1)],1)],1),_c('v-flex',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.board.boardDescription),expression:\"board.boardDescription\"}]},[_c('span',{staticClass:\"caption\"},[_vm._v(\"\\n            \"+_vm._s(_vm.board.boardDescription)+\"\\n            \"),_c('v-icon',{staticClass:\"vertical-align-middle\",attrs:{\"small\":\"\"},on:{\"click\":_vm.openDialog}},[_vm._v(\"info\")])],1)])],1)],1)],1),_c('v-card',{class:{'my-3':_vm.$route.path.endsWith('write') || _vm.$route.path.endsWith('edit')},attrs:{\"flat\":\"\"}},[_c('router-view',{attrs:{\"board\":_vm.board,\"documentBoardId\":_vm.documentBoardId},on:{\"update:documentBoardId\":function($event){_vm.documentBoardId=$event}}})],1),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.$route.path.endsWith('write') && !_vm.$route.path.endsWith('edit')),expression:\"!$route.path.endsWith('write') && !$route.path.endsWith('edit')\"}],attrs:{\"flat\":\"\"}},[_c('document-list',{attrs:{\"board\":_vm.board,\"hasChildren\":!_vm.board.parentBoardId && _vm.childBoardItems.length > 1,\"documentBoardId\":_vm.documentBoardId},on:{\"write\":_vm.moveToWriteDocument,\"update:documentBoardId\":function($event){_vm.documentBoardId=$event}}})],1),_c('v-dialog',{attrs:{\"max-width\":\"800\",\"lazy\":\"\"},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('board-information',{attrs:{\"board\":_vm.selected},on:{\"closeDialog\":_vm.closeDialog}})],1)],1):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container fluid v-if=\"board\">\n    <v-card flat class=\"mb-2\">\n      <v-card-title primary-title class=\"py-2\">\n        <v-layout column>\n          <v-flex>\n            <v-layout row align-center>\n              <v-flex>\n                <v-layout row align-center>\n                  <span class=\"title cursor-pointer\" @click=\"$route.params.documentId || $route.path.endsWith('write')?$router.push('/'+board.boardId):openDialog()\">{{board.boardName}}</span>\n                  <v-tooltip bottom v-if=\"reservedContents\" close-delay=\"500\" class=\"cursor-default\">\n                    <v-icon slot=\"activator\" class=\"ml-1 vertical-align-middle\" color=\"primary\">event_note</v-icon>\n                    <span v-html=\"reservedContents\"></span>\n                  </v-tooltip>\n                  <span class=\"ml-2\" v-if=\"childBoardItems.length > 1\">\n                    <v-select id=\"childBoardSelector\" class=\"hideLine dense childBoardSelector mt-0 pt-0\" flat dense v-model=\"childBoardId\" :items=\"childBoardItems\" item-text=\"boardName\" item-value=\"boardId\" single-line hide-details @input=\"childBoardChanged\"></v-select>\n                  </span>\n                  <v-btn small depressed class=\"short my-0\" color=\"accent\" v-else-if=\"board.boardType === 'T' && board.boardId !== 'topicBest' && !$store.getters.userBoards.some(x=>x.boardId === board.boardId)\" @click=\"openDialog\">구독</v-btn>\n                </v-layout>\n              </v-flex>\n              <v-spacer/>\n              <v-btn depressed color=\"primary\" icon class=\"ma-0\" @click=\"moveToWriteDocument\" v-show=\"!$route.path.endsWith('write') && !$route.path.endsWith('edit') && (($route.params.boardId !== 'loungeBest' && $route.params.boardId !== 'topicBest') || (documentBoardId && $route.params.documentId))\" :small=\"$vuetify.breakpoint.xsOnly\">\n                <v-icon small>edit</v-icon>\n              </v-btn>\n            </v-layout>\n          </v-flex>\n          <v-flex v-show=\"board.boardDescription\">\n            <span class=\"caption\">\n              {{board.boardDescription}}\n              <v-icon small @click=\"openDialog\" class=\"vertical-align-middle\">info</v-icon>\n            </span>\n          </v-flex>\n        </v-layout>\n      </v-card-title>\n    </v-card>\n    <v-card flat :class=\"{'my-3':$route.path.endsWith('write') || $route.path.endsWith('edit')}\">\n      <router-view :board=\"board\" :documentBoardId.sync=\"documentBoardId\"/>\n    </v-card>\n    <v-card flat v-show=\"!$route.path.endsWith('write') && !$route.path.endsWith('edit')\">\n      <document-list :board=\"board\" :hasChildren=\"!board.parentBoardId && childBoardItems.length > 1\" @write=\"moveToWriteDocument\" :documentBoardId.sync=\"documentBoardId\"/>\n    </v-card>\n    <v-dialog v-model=\"dialog\" max-width=\"800\" lazy>\n      <board-information :board=\"selected\" @closeDialog=\"closeDialog\"></board-information>\n    </v-dialog>\n  </v-container>\n</template>\n\n<script>\nimport MainLayout from \"@/layouts/MainLayout\";\nimport router from \"@/router\";\nimport BoardMixins from \"@/components/mixins/BoardMixins\";\nconst groupName = {M: \"전공\", G: \"학년\", N: \"일반\", R: \"지역\", Z: \"인증\"};\nexport default {\n  name: \"Board\",\n  data: () => ({\n    board: undefined,\n    writeButton: true,\n    childBoardId: null,\n    dialog: false,\n    selected: null,\n    userAuthItems: {\n      N: \"예비교사\",\n      A: \"인증\",\n      E: \"전직교사\",\n      D: \"인증제한\"\n    },\n    groupItems: [],\n    allGroupAuthItems: {READWRITE: \"전체구독허용\", READONLY: \"읽기공개\", NONE: \"비공개\"},\n    documentBoardId: null\n  }),\n  props: [\"boardId\"],\n  mixins: [BoardMixins],\n  components: {\n    DocumentList: () => import(\"@/components/board/DocumentList\"),\n    BoardInformation: () => import(\"@/components/BoardInformation\")\n  },\n  computed: {\n    childBoardItems() {\n      if (this.board.parentBoardId) {\n        let siblings = this.$store.getters.boards.filter(x => x.parentBoardId === this.board.parentBoardId && x.boardId !== this.boardId);\n        siblings.splice(0, 0, this.$store.getters.boards.find(x => x.boardId === this.board.parentBoardId));\n        siblings.splice(0, 0, {boardId: null, boardName: this.childBoardLabel});\n        return siblings;\n      } else {\n        let children = this.$store.getters.boards.filter(x => x.parentBoardId === this.boardId);\n        children.splice(0, 0, {boardId: null, boardName: this.childBoardLabel});\n        return children;\n      }\n    },\n    childBoardLabel() {\n      return (this.board.parentBoardId ? \"관련 \" : \"하위 \") + this.boardTypeItems[this.board.boardType];\n    },\n    reservedContents() {\n      if (this.board && this.board.reservedContents) {\n        let reservedContents = this.board.reservedContents;\n        let string = this.$moment(this.board.reservedDate, \"YYYYMMDD\").format(\"Y.M.D 이후 아래와 같이 변경될 예정입니다.<br>\");\n        for (let key in reservedContents) {\n          switch (key) {\n            case \"boardName\":\n              string += `${this.boardTypeItems[this.board.boardType]} 이름 : ${reservedContents[key]}<br>`;\n              break;\n            case \"boardDescription\":\n              string += `${this.boardTypeItems[this.board.boardType]} 설명 : ${reservedContents[key]}<br>`;\n              break;\n            case \"allowAnonymous\":\n              string += `익명글 : ${reservedContents[key] ? \"허용\" : \"비허용\"}<br>`;\n              break;\n            case \"useCategory\":\n              string += `카테고리 : ${reservedContents[key] ? \"사용\" : \"미사용\"}<br>`;\n              break;\n            case \"allGroupAuth\":\n              string += `${this.boardTypeItems[this.board.boardType]} 공개/비공개 : ${this.allGroupAuthItems[reservedContents[key]]}<br>`;\n              break;\n            case \"ownerNickName\":\n              string += `${this.boardTypeItems[this.board.boardType]}지기 : ${reservedContents[key]}<br>`;\n              break;\n            case \"auth\":\n              string += `구독(글쓰기) 권한 : ${reservedContents[key]\n                .filter(x => this.groupItems.some(y => y.value === x.groupId))\n                .map(x => this.groupItems.find(y => y.value === x.groupId).text + (x.command === \"INSERT\" ? \" 추가\" : x.command === \"DELETE\" ? \" 삭제\" : \"\"))\n                .join(\", \")}<br>`;\n              break;\n            case \"status\":\n              string += reservedContents[key] === \"DELETED\" ? `<b>${this.boardTypeItems[this.board.boardType]} 삭제 예정</b><br>` : \"\";\n              break;\n          }\n        }\n        return string;\n      } else {\n        return null;\n      }\n    }\n  },\n  methods: {\n    moveToWriteDocument() {\n      let board = this.board;\n      let childBoardItems = this.childBoardItems;\n      if ((board.boardId === \"loungeBest\" || board.boardId === \"topicBest\") && this.documentBoardId) {\n        board = this.$store.getters.boards.find(x => x.boardId === this.documentBoardId);\n        if (!board) {\n          board = this.board;\n        }\n        if (board.parentBoardId) {\n          childBoardItems = this.$store.getters.boards.filter(x => x.parentBoardId === this.board.parentBoardId && x.boardId !== this.boardId);\n          childBoardItems.splice(0, 0, this.$store.getters.boards.find(x => x.boardId === this.board.parentBoardId));\n          childBoardItems.splice(0, 0, {boardId: null, boardName: this.childBoardLabel});\n        } else {\n          childBoardItems = this.$store.getters.boards.filter(x => x.parentBoardId === this.boardId);\n          childBoardItems.splice(0, 0, {boardId: null, boardName: this.childBoardLabel});\n        }\n      }\n      if (!board.parentBoardId && childBoardItems.length > 1) {\n        const profile = this.$store.getters.profile;\n        const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n        let available = this.$store.getters.boards.filter(x => x.parentBoardId === board.boardId && x.statusAuth.write.includes(profile.auth) && (board.boardType === \"T\" ? userBoard && (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").isBefore(this.$moment())) : x.allowedGroups.some(y => y === profile.region || y === profile.major || y === profile.grade || profile.groups.includes(y)) && (!userBoard || !userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").isBefore(this.$moment()))));\n        if (available.length > 0) {\n          this.$router.push(`/${available[0].boardId}/write`);\n          this.$store.dispatch(\"showSnackbar\", {text: `글을 쓸 수 있는 ${available[0].boardName}에 작성됩니다.`, color: \"info\"});\n        } else if (this.board.boardType === \"T\") {\n          this.$store.dispatch(\"showSnackbar\", {text: \"글을 쓸 토픽을 선택하여 구독해주세요\", color: \"info\"});\n        } else {\n          available = this.$store.getters.boards.filter(x => x.parentBoardId === board.boardId && x.statusAuth.write.includes(profile.auth));\n          if (available.length === 0) {\n            this.$store.dispatch(\"showSnackbar\", {text: \"인증 후에 글을 쓸 수 있습니다.\", color: \"info\"});\n          } else {\n            available = available.filter(x => x.allowedGroups.some(y => y === profile.region || y === profile.major || y === profile.grade || profile.groups.includes(y)));\n            if (available.length === 0) {\n              this.$store.dispatch(\"showSnackbar\", {text: `현재 소속된 ${this.boardTypeItems[board.boardType]}가 없습니다. ${this.$vuetify.breakpoint.xsOnly ? \"학년, 전공을 지정해주세요.\" : \"내 계정정보에서 학년, 전공을 지정해주세요.\"}`, color: \"info\"});\n            } else {\n              this.$store.dispatch(\"showSnackbar\", {text: `현재 ${available[0].boardName}에 글쓰기가 제한되어있습니다.`, color: \"info\"});\n            }\n          }\n        }\n      } else {\n        const profile = this.$store.getters.profile;\n        if (board.statusAuth.write.includes(profile.auth)) {\n          if (board.boardType === \"T\") {\n            if (this.$store.getters.userBoards.some(x => x.boardId === board.boardId)) {\n              const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n              if (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").isBefore(this.$moment())) {\n                this.$router.push(`/${board.boardId}/write`);\n              } else {\n                this.$store.dispatch(\"showSnackbar\", {text: `글쓰기가 ${this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").format(\"Y/M/D\")}까지 제한되었습니다.`});\n              }\n            } else {\n              //need subscription\n              if (board.allGroupAuth === \"READWRITE\" || board.allowedGroups.some(x => x === profile.region || x === profile.major || x === profile.grade || profile.groups.includes(x))) {\n                //i can subscribe this board!\n                this.$axios\n                  .post(\"/user/board\", {boardId: board.boardId})\n                  .then(response => {\n                    this.$store.dispatch(\"addUserBoard\", Object.assign({}, board));\n                    this.$store.dispatch(\"showSnackbar\", {text: `${board.boardName} 토픽을 구독하였습니다.`, color: \"info\"});\n                    this.$router.push(`/${board.boardId}/write`);\n                  })\n                  .catch(error => {\n                    console.log(error);\n                    this.$store.dispatch(\"showSnackbar\", {text: `글을 쓰기 위한 구독을 하지 못했습니다.${error && error.response && error.response.data ? \"[\" + error.response.data.message + \"]\" : \"\"}`, color: \"error\"});\n                  });\n              } else {\n                this.$store.dispatch(\"showSnackbar\", {text: \"내가 구독할 수 없는 토픽입니다.\", color: \"info\"});\n              }\n            }\n          } else {\n            if (board.allGroupAuth === \"READWRITE\" || board.allowedGroups.some(x => x === profile.region || x === profile.major || x === profile.grade || profile.groups.includes(x))) {\n              if (this.$store.getters.userBoards.some(x => x.boardId === board.boardId)) {\n                const userBoard = this.$store.getters.userBoards.find(x => x.boardId === board.boardId);\n                if (!userBoard.writeRestrictDate || this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").isBefore(this.$moment())) {\n                  this.$router.push(`/${board.boardId}/write`);\n                } else {\n                  this.$store.dispatch(\"showSnackbar\", {text: `글쓰기가 ${this.$moment(userBoard.writeRestrictDate, \"YYYYMMDD\").format(\"Y/M/D\")}까지 제한되었습니다.`});\n                }\n              } else {\n                this.$router.push(`/${board.boardId}/write`);\n              }\n            } else {\n              this.$store.dispatch(\"showSnackbar\", {text: `현재 소속된 ${this.boardTypeItems[board.boardType]}가 아닙니다.`, color: \"info\"});\n            }\n          }\n        } else {\n          this.$store.dispatch(\"showSnackbar\", {text: `${board.statusAuth.write.map(x => this.userAuthItems[x]).join(\", \")}회원만 글을 쓸 수 있습니다.`, color: \"info\"});\n        }\n      }\n    },\n    async getBoard(boardId) {\n      let response;\n      try {\n        response = await this.$axios.get(`/board?boardId=${boardId}`);\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n      this.setBoard(response.data);\n      return true;\n    },\n    writeDocument() {\n      this.$router.push(`/${this.boardId}/write`);\n    },\n    setBoard(board) {\n      this.board = board;\n      document.title = board.boardName ? board.boardName + \" - Pedagy\" : \"Pedagy\";\n      this.$store.dispatch(\"switchBoardType\", this.board.boardType === \"T\" ? \"T\" : \"L\");\n    },\n    childBoardChanged() {\n      if (this.childBoardId) {\n        this.$router.push(\"/\" + this.childBoardId);\n      }\n    },\n    subscribe() {\n      this.$axios\n        .post(\"/user/board\", {boardId: this.board.boardId})\n        .then(response => {\n          this.$store.dispatch(\"addUserBoard\", Object.assign({}, this.board));\n          this.$store.dispatch(\"showSnackbar\", {text: `${this.board.boardName} 토픽을 구독하였습니다! 구독 기념 글을 작성해보세요.`, color: \"success\"});\n        })\n        .catch(error => {\n          console.log(error);\n          this.$store.dispatch(\"showSnackbar\", {text: `${error && error.response && error.response.data ? error.response.data.message || `${this.board.boardName} 구독을 하지 못했습니다.` : `${this.board.boardName} 구독을 하지 못했습니다.`}`, color: \"error\"});\n        });\n    },\n    openDialog() {\n      if (this.selected && this.selected.boardId === this.board.boardId) {\n        this.dialog = true;\n      } else {\n        this.$axios\n          .get(\"/board\", {params: {boardId: this.board.boardId}})\n          .then(response => {\n            this.selected = response.data;\n            this.dialog = true;\n          })\n          .catch(error => {\n            console.log(error);\n            this.$store.dispatch(\"showSnackbar\", {text: `정보를 가져오지 못했습니다.${error && error.response && error.response.data ? \"[\" + error.response.data.message + \"]\" : \"\"}`, color: \"error\"});\n          });\n      }\n    },\n    closeDialog() {\n      this.dialog = false;\n    }\n  },\n  created() {\n    this.$emit(\"update:layout\", MainLayout);\n    this.$store.dispatch(\"setColumnType\", \"HIDE_SM\");\n    if (this.$store.getters.groups) {\n      this.groupItems = this.$store.getters.groups;\n    } else {\n      this.$axios\n        .get(\"/group\", {headers: {silent: true}})\n        .then(response => {\n          response.data.forEach(x => {\n            if (x.groupType === \"N\" || x.groupType === \"D\" || x.groupType === \"E\") {\n              x.groupType = \"Z\";\n            }\n          });\n          this.groupItems = response.data.sort((a, b) => (a.groupType < b.groupType ? -1 : a.groupType === b.groupType ? 0 : 1));\n          let previous = null;\n          let i = 0;\n          while (i < this.groupItems.length) {\n            if (previous !== this.groupItems[i].groupType) {\n              if (previous) {\n                previous = this.groupItems[i].groupType;\n                this.groupItems.splice(i, 0, {divider: true});\n                i++;\n              } else {\n                previous = this.groupItems[i].groupType;\n              }\n              this.groupItems.splice(i, 0, {header: groupName[previous]});\n              i++;\n            }\n            i++;\n          }\n          this.groupItems = this.groupItems.map(x => (x.groupName ? {text: x.groupName, value: x.groupId} : x));\n          this.$store.dispatch(\"setGroups\", this.groupItems);\n        })\n        .catch(error => {\n          this.$store.dispatch(\"showSnackbar\", {text: `그룹 목록을 가져오지 못했습니다.${error && error.response && error.response.data ? \"[\" + error.response.data.message + \"]\" : \"\"}`});\n        });\n    }\n  },\n  async beforeRouteUpdate(to, from, next) {\n    if (this.$store.getters.boards.some(x => x.boardId === to.params.boardId)) {\n      this.setBoard(this.$store.getters.boards.find(x => x.boardId === to.params.boardId));\n      this.$store.dispatch(\"setColumnType\", \"HIDE_SM\");\n      this.$nextTick(() => (this.childBoardId = null));\n      next();\n    } else if (await this.getBoard(to.params.boardId)) {\n      this.$store.dispatch(\"setColumnType\", \"HIDE_SM\");\n      this.$nextTick(() => (this.childBoardId = null));\n      next();\n    } else {\n      next(\"/error?error=404\");\n    }\n  },\n  async beforeRouteEnter(to, from, next) {\n    if (router.app.$store.getters.boards.some(x => x.boardId === to.params.boardId)) {\n      next(vm => {\n        vm.setBoard(router.app.$store.getters.boards.find(x => x.boardId === to.params.boardId));\n      });\n    } else {\n      let board;\n      try {\n        board = await router.app.$axios.get(\"/board\", {params: {boardId: to.params.boardId}});\n      } catch (error) {\n        next(\"/error?error=\" + (error.response ? error.response.status || \"404\" : \"404\"));\n        return;\n      }\n      next(vm => {\n        vm.setBoard(board.data);\n      });\n    }\n  }\n};\n</script>\n<style>\n#childBoardSelector {\n  width: 6px;\n}\n.childBoardSelector {\n  font-size: 14px;\n}\n.childBoardSelector .v-input__append-inner {\n  margin-left: -16px;\n  cursor: pointer;\n}\n.childBoardSelector .v-input__slot {\n  padding-bottom: 0;\n}\n.childBoardSelector .v-select__selection {\n  cursor: pointer;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!./Board.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Board.vue?vue&type=template&id=684d306e&\"\nimport script from \"./Board.vue?vue&type=script&lang=js&\"\nexport * from \"./Board.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Board.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/cli-service/node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}